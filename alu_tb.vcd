$date
	Sat Jan 04 17:41:37 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module alu_tb $end
$scope module uut $end
$var wire 64 ! a [63:0] $end
$var wire 64 " b [63:0] $end
$var wire 1 # cin $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$var wire 1 & s2 $end
$var wire 1 ' sel0 $end
$var wire 1 ( sel1 $end
$var wire 64 ) y [63:0] $end
$var wire 64 * x [63:0] $end
$var wire 64 + temp_sum2 [63:0] $end
$var wire 65 , temp_sum [64:0] $end
$var wire 64 - sum [63:0] $end
$var wire 1 . cout $end
$var wire 64 / carry [63:0] $end
$scope begin alu_logic[0] $end
$var wire 1 0 temp_cin $end
$var parameter 2 1 i $end
$scope module alcu $end
$var wire 1 2 a $end
$var wire 1 3 b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$var wire 1 & s2 $end
$var wire 1 4 x $end
$var wire 1 5 y $end
$var wire 1 6 temp_y $end
$scope module tc $end
$var wire 1 6 B $end
$var wire 1 3 b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$upscope $end
$upscope $end
$scope module fa $end
$var wire 1 7 a $end
$var wire 1 8 b $end
$var wire 1 9 cin $end
$var wire 1 : cout $end
$var wire 1 ; sum $end
$upscope $end
$upscope $end
$scope begin alu_logic[1] $end
$var wire 1 < temp_cin $end
$var parameter 2 = i $end
$scope module alcu $end
$var wire 1 > a $end
$var wire 1 ? b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$var wire 1 & s2 $end
$var wire 1 @ x $end
$var wire 1 A y $end
$var wire 1 B temp_y $end
$scope module tc $end
$var wire 1 B B $end
$var wire 1 ? b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$upscope $end
$upscope $end
$scope module fa $end
$var wire 1 C a $end
$var wire 1 D b $end
$var wire 1 E cin $end
$var wire 1 F cout $end
$var wire 1 G sum $end
$upscope $end
$upscope $end
$scope begin alu_logic[2] $end
$var wire 1 H temp_cin $end
$var parameter 3 I i $end
$scope module alcu $end
$var wire 1 J a $end
$var wire 1 K b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$var wire 1 & s2 $end
$var wire 1 L x $end
$var wire 1 M y $end
$var wire 1 N temp_y $end
$scope module tc $end
$var wire 1 N B $end
$var wire 1 K b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$upscope $end
$upscope $end
$scope module fa $end
$var wire 1 O a $end
$var wire 1 P b $end
$var wire 1 Q cin $end
$var wire 1 R cout $end
$var wire 1 S sum $end
$upscope $end
$upscope $end
$scope begin alu_logic[3] $end
$var wire 1 T temp_cin $end
$var parameter 3 U i $end
$scope module alcu $end
$var wire 1 V a $end
$var wire 1 W b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$var wire 1 & s2 $end
$var wire 1 X x $end
$var wire 1 Y y $end
$var wire 1 Z temp_y $end
$scope module tc $end
$var wire 1 Z B $end
$var wire 1 W b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$upscope $end
$upscope $end
$scope module fa $end
$var wire 1 [ a $end
$var wire 1 \ b $end
$var wire 1 ] cin $end
$var wire 1 ^ cout $end
$var wire 1 _ sum $end
$upscope $end
$upscope $end
$scope begin alu_logic[4] $end
$var wire 1 ` temp_cin $end
$var parameter 4 a i $end
$scope module alcu $end
$var wire 1 b a $end
$var wire 1 c b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$var wire 1 & s2 $end
$var wire 1 d x $end
$var wire 1 e y $end
$var wire 1 f temp_y $end
$scope module tc $end
$var wire 1 f B $end
$var wire 1 c b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$upscope $end
$upscope $end
$scope module fa $end
$var wire 1 g a $end
$var wire 1 h b $end
$var wire 1 i cin $end
$var wire 1 j cout $end
$var wire 1 k sum $end
$upscope $end
$upscope $end
$scope begin alu_logic[5] $end
$var wire 1 l temp_cin $end
$var parameter 4 m i $end
$scope module alcu $end
$var wire 1 n a $end
$var wire 1 o b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$var wire 1 & s2 $end
$var wire 1 p x $end
$var wire 1 q y $end
$var wire 1 r temp_y $end
$scope module tc $end
$var wire 1 r B $end
$var wire 1 o b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$upscope $end
$upscope $end
$scope module fa $end
$var wire 1 s a $end
$var wire 1 t b $end
$var wire 1 u cin $end
$var wire 1 v cout $end
$var wire 1 w sum $end
$upscope $end
$upscope $end
$scope begin alu_logic[6] $end
$var wire 1 x temp_cin $end
$var parameter 4 y i $end
$scope module alcu $end
$var wire 1 z a $end
$var wire 1 { b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$var wire 1 & s2 $end
$var wire 1 | x $end
$var wire 1 } y $end
$var wire 1 ~ temp_y $end
$scope module tc $end
$var wire 1 ~ B $end
$var wire 1 { b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$upscope $end
$upscope $end
$scope module fa $end
$var wire 1 !" a $end
$var wire 1 "" b $end
$var wire 1 #" cin $end
$var wire 1 $" cout $end
$var wire 1 %" sum $end
$upscope $end
$upscope $end
$scope begin alu_logic[7] $end
$var wire 1 &" temp_cin $end
$var parameter 4 '" i $end
$scope module alcu $end
$var wire 1 (" a $end
$var wire 1 )" b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$var wire 1 & s2 $end
$var wire 1 *" x $end
$var wire 1 +" y $end
$var wire 1 ," temp_y $end
$scope module tc $end
$var wire 1 ," B $end
$var wire 1 )" b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$upscope $end
$upscope $end
$scope module fa $end
$var wire 1 -" a $end
$var wire 1 ." b $end
$var wire 1 /" cin $end
$var wire 1 0" cout $end
$var wire 1 1" sum $end
$upscope $end
$upscope $end
$scope begin alu_logic[8] $end
$var wire 1 2" temp_cin $end
$var parameter 5 3" i $end
$scope module alcu $end
$var wire 1 4" a $end
$var wire 1 5" b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$var wire 1 & s2 $end
$var wire 1 6" x $end
$var wire 1 7" y $end
$var wire 1 8" temp_y $end
$scope module tc $end
$var wire 1 8" B $end
$var wire 1 5" b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$upscope $end
$upscope $end
$scope module fa $end
$var wire 1 9" a $end
$var wire 1 :" b $end
$var wire 1 ;" cin $end
$var wire 1 <" cout $end
$var wire 1 =" sum $end
$upscope $end
$upscope $end
$scope begin alu_logic[9] $end
$var wire 1 >" temp_cin $end
$var parameter 5 ?" i $end
$scope module alcu $end
$var wire 1 @" a $end
$var wire 1 A" b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$var wire 1 & s2 $end
$var wire 1 B" x $end
$var wire 1 C" y $end
$var wire 1 D" temp_y $end
$scope module tc $end
$var wire 1 D" B $end
$var wire 1 A" b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$upscope $end
$upscope $end
$scope module fa $end
$var wire 1 E" a $end
$var wire 1 F" b $end
$var wire 1 G" cin $end
$var wire 1 H" cout $end
$var wire 1 I" sum $end
$upscope $end
$upscope $end
$scope begin alu_logic[10] $end
$var wire 1 J" temp_cin $end
$var parameter 5 K" i $end
$scope module alcu $end
$var wire 1 L" a $end
$var wire 1 M" b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$var wire 1 & s2 $end
$var wire 1 N" x $end
$var wire 1 O" y $end
$var wire 1 P" temp_y $end
$scope module tc $end
$var wire 1 P" B $end
$var wire 1 M" b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$upscope $end
$upscope $end
$scope module fa $end
$var wire 1 Q" a $end
$var wire 1 R" b $end
$var wire 1 S" cin $end
$var wire 1 T" cout $end
$var wire 1 U" sum $end
$upscope $end
$upscope $end
$scope begin alu_logic[11] $end
$var wire 1 V" temp_cin $end
$var parameter 5 W" i $end
$scope module alcu $end
$var wire 1 X" a $end
$var wire 1 Y" b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$var wire 1 & s2 $end
$var wire 1 Z" x $end
$var wire 1 [" y $end
$var wire 1 \" temp_y $end
$scope module tc $end
$var wire 1 \" B $end
$var wire 1 Y" b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$upscope $end
$upscope $end
$scope module fa $end
$var wire 1 ]" a $end
$var wire 1 ^" b $end
$var wire 1 _" cin $end
$var wire 1 `" cout $end
$var wire 1 a" sum $end
$upscope $end
$upscope $end
$scope begin alu_logic[12] $end
$var wire 1 b" temp_cin $end
$var parameter 5 c" i $end
$scope module alcu $end
$var wire 1 d" a $end
$var wire 1 e" b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$var wire 1 & s2 $end
$var wire 1 f" x $end
$var wire 1 g" y $end
$var wire 1 h" temp_y $end
$scope module tc $end
$var wire 1 h" B $end
$var wire 1 e" b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$upscope $end
$upscope $end
$scope module fa $end
$var wire 1 i" a $end
$var wire 1 j" b $end
$var wire 1 k" cin $end
$var wire 1 l" cout $end
$var wire 1 m" sum $end
$upscope $end
$upscope $end
$scope begin alu_logic[13] $end
$var wire 1 n" temp_cin $end
$var parameter 5 o" i $end
$scope module alcu $end
$var wire 1 p" a $end
$var wire 1 q" b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$var wire 1 & s2 $end
$var wire 1 r" x $end
$var wire 1 s" y $end
$var wire 1 t" temp_y $end
$scope module tc $end
$var wire 1 t" B $end
$var wire 1 q" b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$upscope $end
$upscope $end
$scope module fa $end
$var wire 1 u" a $end
$var wire 1 v" b $end
$var wire 1 w" cin $end
$var wire 1 x" cout $end
$var wire 1 y" sum $end
$upscope $end
$upscope $end
$scope begin alu_logic[14] $end
$var wire 1 z" temp_cin $end
$var parameter 5 {" i $end
$scope module alcu $end
$var wire 1 |" a $end
$var wire 1 }" b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$var wire 1 & s2 $end
$var wire 1 ~" x $end
$var wire 1 !# y $end
$var wire 1 "# temp_y $end
$scope module tc $end
$var wire 1 "# B $end
$var wire 1 }" b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$upscope $end
$upscope $end
$scope module fa $end
$var wire 1 ## a $end
$var wire 1 $# b $end
$var wire 1 %# cin $end
$var wire 1 &# cout $end
$var wire 1 '# sum $end
$upscope $end
$upscope $end
$scope begin alu_logic[15] $end
$var wire 1 (# temp_cin $end
$var parameter 5 )# i $end
$scope module alcu $end
$var wire 1 *# a $end
$var wire 1 +# b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$var wire 1 & s2 $end
$var wire 1 ,# x $end
$var wire 1 -# y $end
$var wire 1 .# temp_y $end
$scope module tc $end
$var wire 1 .# B $end
$var wire 1 +# b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$upscope $end
$upscope $end
$scope module fa $end
$var wire 1 /# a $end
$var wire 1 0# b $end
$var wire 1 1# cin $end
$var wire 1 2# cout $end
$var wire 1 3# sum $end
$upscope $end
$upscope $end
$scope begin alu_logic[16] $end
$var wire 1 4# temp_cin $end
$var parameter 6 5# i $end
$scope module alcu $end
$var wire 1 6# a $end
$var wire 1 7# b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$var wire 1 & s2 $end
$var wire 1 8# x $end
$var wire 1 9# y $end
$var wire 1 :# temp_y $end
$scope module tc $end
$var wire 1 :# B $end
$var wire 1 7# b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$upscope $end
$upscope $end
$scope module fa $end
$var wire 1 ;# a $end
$var wire 1 <# b $end
$var wire 1 =# cin $end
$var wire 1 ># cout $end
$var wire 1 ?# sum $end
$upscope $end
$upscope $end
$scope begin alu_logic[17] $end
$var wire 1 @# temp_cin $end
$var parameter 6 A# i $end
$scope module alcu $end
$var wire 1 B# a $end
$var wire 1 C# b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$var wire 1 & s2 $end
$var wire 1 D# x $end
$var wire 1 E# y $end
$var wire 1 F# temp_y $end
$scope module tc $end
$var wire 1 F# B $end
$var wire 1 C# b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$upscope $end
$upscope $end
$scope module fa $end
$var wire 1 G# a $end
$var wire 1 H# b $end
$var wire 1 I# cin $end
$var wire 1 J# cout $end
$var wire 1 K# sum $end
$upscope $end
$upscope $end
$scope begin alu_logic[18] $end
$var wire 1 L# temp_cin $end
$var parameter 6 M# i $end
$scope module alcu $end
$var wire 1 N# a $end
$var wire 1 O# b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$var wire 1 & s2 $end
$var wire 1 P# x $end
$var wire 1 Q# y $end
$var wire 1 R# temp_y $end
$scope module tc $end
$var wire 1 R# B $end
$var wire 1 O# b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$upscope $end
$upscope $end
$scope module fa $end
$var wire 1 S# a $end
$var wire 1 T# b $end
$var wire 1 U# cin $end
$var wire 1 V# cout $end
$var wire 1 W# sum $end
$upscope $end
$upscope $end
$scope begin alu_logic[19] $end
$var wire 1 X# temp_cin $end
$var parameter 6 Y# i $end
$scope module alcu $end
$var wire 1 Z# a $end
$var wire 1 [# b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$var wire 1 & s2 $end
$var wire 1 \# x $end
$var wire 1 ]# y $end
$var wire 1 ^# temp_y $end
$scope module tc $end
$var wire 1 ^# B $end
$var wire 1 [# b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$upscope $end
$upscope $end
$scope module fa $end
$var wire 1 _# a $end
$var wire 1 `# b $end
$var wire 1 a# cin $end
$var wire 1 b# cout $end
$var wire 1 c# sum $end
$upscope $end
$upscope $end
$scope begin alu_logic[20] $end
$var wire 1 d# temp_cin $end
$var parameter 6 e# i $end
$scope module alcu $end
$var wire 1 f# a $end
$var wire 1 g# b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$var wire 1 & s2 $end
$var wire 1 h# x $end
$var wire 1 i# y $end
$var wire 1 j# temp_y $end
$scope module tc $end
$var wire 1 j# B $end
$var wire 1 g# b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$upscope $end
$upscope $end
$scope module fa $end
$var wire 1 k# a $end
$var wire 1 l# b $end
$var wire 1 m# cin $end
$var wire 1 n# cout $end
$var wire 1 o# sum $end
$upscope $end
$upscope $end
$scope begin alu_logic[21] $end
$var wire 1 p# temp_cin $end
$var parameter 6 q# i $end
$scope module alcu $end
$var wire 1 r# a $end
$var wire 1 s# b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$var wire 1 & s2 $end
$var wire 1 t# x $end
$var wire 1 u# y $end
$var wire 1 v# temp_y $end
$scope module tc $end
$var wire 1 v# B $end
$var wire 1 s# b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$upscope $end
$upscope $end
$scope module fa $end
$var wire 1 w# a $end
$var wire 1 x# b $end
$var wire 1 y# cin $end
$var wire 1 z# cout $end
$var wire 1 {# sum $end
$upscope $end
$upscope $end
$scope begin alu_logic[22] $end
$var wire 1 |# temp_cin $end
$var parameter 6 }# i $end
$scope module alcu $end
$var wire 1 ~# a $end
$var wire 1 !$ b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$var wire 1 & s2 $end
$var wire 1 "$ x $end
$var wire 1 #$ y $end
$var wire 1 $$ temp_y $end
$scope module tc $end
$var wire 1 $$ B $end
$var wire 1 !$ b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$upscope $end
$upscope $end
$scope module fa $end
$var wire 1 %$ a $end
$var wire 1 &$ b $end
$var wire 1 '$ cin $end
$var wire 1 ($ cout $end
$var wire 1 )$ sum $end
$upscope $end
$upscope $end
$scope begin alu_logic[23] $end
$var wire 1 *$ temp_cin $end
$var parameter 6 +$ i $end
$scope module alcu $end
$var wire 1 ,$ a $end
$var wire 1 -$ b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$var wire 1 & s2 $end
$var wire 1 .$ x $end
$var wire 1 /$ y $end
$var wire 1 0$ temp_y $end
$scope module tc $end
$var wire 1 0$ B $end
$var wire 1 -$ b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$upscope $end
$upscope $end
$scope module fa $end
$var wire 1 1$ a $end
$var wire 1 2$ b $end
$var wire 1 3$ cin $end
$var wire 1 4$ cout $end
$var wire 1 5$ sum $end
$upscope $end
$upscope $end
$scope begin alu_logic[24] $end
$var wire 1 6$ temp_cin $end
$var parameter 6 7$ i $end
$scope module alcu $end
$var wire 1 8$ a $end
$var wire 1 9$ b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$var wire 1 & s2 $end
$var wire 1 :$ x $end
$var wire 1 ;$ y $end
$var wire 1 <$ temp_y $end
$scope module tc $end
$var wire 1 <$ B $end
$var wire 1 9$ b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$upscope $end
$upscope $end
$scope module fa $end
$var wire 1 =$ a $end
$var wire 1 >$ b $end
$var wire 1 ?$ cin $end
$var wire 1 @$ cout $end
$var wire 1 A$ sum $end
$upscope $end
$upscope $end
$scope begin alu_logic[25] $end
$var wire 1 B$ temp_cin $end
$var parameter 6 C$ i $end
$scope module alcu $end
$var wire 1 D$ a $end
$var wire 1 E$ b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$var wire 1 & s2 $end
$var wire 1 F$ x $end
$var wire 1 G$ y $end
$var wire 1 H$ temp_y $end
$scope module tc $end
$var wire 1 H$ B $end
$var wire 1 E$ b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$upscope $end
$upscope $end
$scope module fa $end
$var wire 1 I$ a $end
$var wire 1 J$ b $end
$var wire 1 K$ cin $end
$var wire 1 L$ cout $end
$var wire 1 M$ sum $end
$upscope $end
$upscope $end
$scope begin alu_logic[26] $end
$var wire 1 N$ temp_cin $end
$var parameter 6 O$ i $end
$scope module alcu $end
$var wire 1 P$ a $end
$var wire 1 Q$ b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$var wire 1 & s2 $end
$var wire 1 R$ x $end
$var wire 1 S$ y $end
$var wire 1 T$ temp_y $end
$scope module tc $end
$var wire 1 T$ B $end
$var wire 1 Q$ b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$upscope $end
$upscope $end
$scope module fa $end
$var wire 1 U$ a $end
$var wire 1 V$ b $end
$var wire 1 W$ cin $end
$var wire 1 X$ cout $end
$var wire 1 Y$ sum $end
$upscope $end
$upscope $end
$scope begin alu_logic[27] $end
$var wire 1 Z$ temp_cin $end
$var parameter 6 [$ i $end
$scope module alcu $end
$var wire 1 \$ a $end
$var wire 1 ]$ b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$var wire 1 & s2 $end
$var wire 1 ^$ x $end
$var wire 1 _$ y $end
$var wire 1 `$ temp_y $end
$scope module tc $end
$var wire 1 `$ B $end
$var wire 1 ]$ b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$upscope $end
$upscope $end
$scope module fa $end
$var wire 1 a$ a $end
$var wire 1 b$ b $end
$var wire 1 c$ cin $end
$var wire 1 d$ cout $end
$var wire 1 e$ sum $end
$upscope $end
$upscope $end
$scope begin alu_logic[28] $end
$var wire 1 f$ temp_cin $end
$var parameter 6 g$ i $end
$scope module alcu $end
$var wire 1 h$ a $end
$var wire 1 i$ b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$var wire 1 & s2 $end
$var wire 1 j$ x $end
$var wire 1 k$ y $end
$var wire 1 l$ temp_y $end
$scope module tc $end
$var wire 1 l$ B $end
$var wire 1 i$ b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$upscope $end
$upscope $end
$scope module fa $end
$var wire 1 m$ a $end
$var wire 1 n$ b $end
$var wire 1 o$ cin $end
$var wire 1 p$ cout $end
$var wire 1 q$ sum $end
$upscope $end
$upscope $end
$scope begin alu_logic[29] $end
$var wire 1 r$ temp_cin $end
$var parameter 6 s$ i $end
$scope module alcu $end
$var wire 1 t$ a $end
$var wire 1 u$ b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$var wire 1 & s2 $end
$var wire 1 v$ x $end
$var wire 1 w$ y $end
$var wire 1 x$ temp_y $end
$scope module tc $end
$var wire 1 x$ B $end
$var wire 1 u$ b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$upscope $end
$upscope $end
$scope module fa $end
$var wire 1 y$ a $end
$var wire 1 z$ b $end
$var wire 1 {$ cin $end
$var wire 1 |$ cout $end
$var wire 1 }$ sum $end
$upscope $end
$upscope $end
$scope begin alu_logic[30] $end
$var wire 1 ~$ temp_cin $end
$var parameter 6 !% i $end
$scope module alcu $end
$var wire 1 "% a $end
$var wire 1 #% b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$var wire 1 & s2 $end
$var wire 1 $% x $end
$var wire 1 %% y $end
$var wire 1 &% temp_y $end
$scope module tc $end
$var wire 1 &% B $end
$var wire 1 #% b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$upscope $end
$upscope $end
$scope module fa $end
$var wire 1 '% a $end
$var wire 1 (% b $end
$var wire 1 )% cin $end
$var wire 1 *% cout $end
$var wire 1 +% sum $end
$upscope $end
$upscope $end
$scope begin alu_logic[31] $end
$var wire 1 ,% temp_cin $end
$var parameter 6 -% i $end
$scope module alcu $end
$var wire 1 .% a $end
$var wire 1 /% b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$var wire 1 & s2 $end
$var wire 1 0% x $end
$var wire 1 1% y $end
$var wire 1 2% temp_y $end
$scope module tc $end
$var wire 1 2% B $end
$var wire 1 /% b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$upscope $end
$upscope $end
$scope module fa $end
$var wire 1 3% a $end
$var wire 1 4% b $end
$var wire 1 5% cin $end
$var wire 1 6% cout $end
$var wire 1 7% sum $end
$upscope $end
$upscope $end
$scope begin alu_logic[32] $end
$var wire 1 8% temp_cin $end
$var parameter 7 9% i $end
$scope module alcu $end
$var wire 1 :% a $end
$var wire 1 ;% b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$var wire 1 & s2 $end
$var wire 1 <% x $end
$var wire 1 =% y $end
$var wire 1 >% temp_y $end
$scope module tc $end
$var wire 1 >% B $end
$var wire 1 ;% b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$upscope $end
$upscope $end
$scope module fa $end
$var wire 1 ?% a $end
$var wire 1 @% b $end
$var wire 1 A% cin $end
$var wire 1 B% cout $end
$var wire 1 C% sum $end
$upscope $end
$upscope $end
$scope begin alu_logic[33] $end
$var wire 1 D% temp_cin $end
$var parameter 7 E% i $end
$scope module alcu $end
$var wire 1 F% a $end
$var wire 1 G% b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$var wire 1 & s2 $end
$var wire 1 H% x $end
$var wire 1 I% y $end
$var wire 1 J% temp_y $end
$scope module tc $end
$var wire 1 J% B $end
$var wire 1 G% b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$upscope $end
$upscope $end
$scope module fa $end
$var wire 1 K% a $end
$var wire 1 L% b $end
$var wire 1 M% cin $end
$var wire 1 N% cout $end
$var wire 1 O% sum $end
$upscope $end
$upscope $end
$scope begin alu_logic[34] $end
$var wire 1 P% temp_cin $end
$var parameter 7 Q% i $end
$scope module alcu $end
$var wire 1 R% a $end
$var wire 1 S% b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$var wire 1 & s2 $end
$var wire 1 T% x $end
$var wire 1 U% y $end
$var wire 1 V% temp_y $end
$scope module tc $end
$var wire 1 V% B $end
$var wire 1 S% b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$upscope $end
$upscope $end
$scope module fa $end
$var wire 1 W% a $end
$var wire 1 X% b $end
$var wire 1 Y% cin $end
$var wire 1 Z% cout $end
$var wire 1 [% sum $end
$upscope $end
$upscope $end
$scope begin alu_logic[35] $end
$var wire 1 \% temp_cin $end
$var parameter 7 ]% i $end
$scope module alcu $end
$var wire 1 ^% a $end
$var wire 1 _% b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$var wire 1 & s2 $end
$var wire 1 `% x $end
$var wire 1 a% y $end
$var wire 1 b% temp_y $end
$scope module tc $end
$var wire 1 b% B $end
$var wire 1 _% b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$upscope $end
$upscope $end
$scope module fa $end
$var wire 1 c% a $end
$var wire 1 d% b $end
$var wire 1 e% cin $end
$var wire 1 f% cout $end
$var wire 1 g% sum $end
$upscope $end
$upscope $end
$scope begin alu_logic[36] $end
$var wire 1 h% temp_cin $end
$var parameter 7 i% i $end
$scope module alcu $end
$var wire 1 j% a $end
$var wire 1 k% b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$var wire 1 & s2 $end
$var wire 1 l% x $end
$var wire 1 m% y $end
$var wire 1 n% temp_y $end
$scope module tc $end
$var wire 1 n% B $end
$var wire 1 k% b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$upscope $end
$upscope $end
$scope module fa $end
$var wire 1 o% a $end
$var wire 1 p% b $end
$var wire 1 q% cin $end
$var wire 1 r% cout $end
$var wire 1 s% sum $end
$upscope $end
$upscope $end
$scope begin alu_logic[37] $end
$var wire 1 t% temp_cin $end
$var parameter 7 u% i $end
$scope module alcu $end
$var wire 1 v% a $end
$var wire 1 w% b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$var wire 1 & s2 $end
$var wire 1 x% x $end
$var wire 1 y% y $end
$var wire 1 z% temp_y $end
$scope module tc $end
$var wire 1 z% B $end
$var wire 1 w% b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$upscope $end
$upscope $end
$scope module fa $end
$var wire 1 {% a $end
$var wire 1 |% b $end
$var wire 1 }% cin $end
$var wire 1 ~% cout $end
$var wire 1 !& sum $end
$upscope $end
$upscope $end
$scope begin alu_logic[38] $end
$var wire 1 "& temp_cin $end
$var parameter 7 #& i $end
$scope module alcu $end
$var wire 1 $& a $end
$var wire 1 %& b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$var wire 1 & s2 $end
$var wire 1 && x $end
$var wire 1 '& y $end
$var wire 1 (& temp_y $end
$scope module tc $end
$var wire 1 (& B $end
$var wire 1 %& b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$upscope $end
$upscope $end
$scope module fa $end
$var wire 1 )& a $end
$var wire 1 *& b $end
$var wire 1 +& cin $end
$var wire 1 ,& cout $end
$var wire 1 -& sum $end
$upscope $end
$upscope $end
$scope begin alu_logic[39] $end
$var wire 1 .& temp_cin $end
$var parameter 7 /& i $end
$scope module alcu $end
$var wire 1 0& a $end
$var wire 1 1& b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$var wire 1 & s2 $end
$var wire 1 2& x $end
$var wire 1 3& y $end
$var wire 1 4& temp_y $end
$scope module tc $end
$var wire 1 4& B $end
$var wire 1 1& b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$upscope $end
$upscope $end
$scope module fa $end
$var wire 1 5& a $end
$var wire 1 6& b $end
$var wire 1 7& cin $end
$var wire 1 8& cout $end
$var wire 1 9& sum $end
$upscope $end
$upscope $end
$scope begin alu_logic[40] $end
$var wire 1 :& temp_cin $end
$var parameter 7 ;& i $end
$scope module alcu $end
$var wire 1 <& a $end
$var wire 1 =& b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$var wire 1 & s2 $end
$var wire 1 >& x $end
$var wire 1 ?& y $end
$var wire 1 @& temp_y $end
$scope module tc $end
$var wire 1 @& B $end
$var wire 1 =& b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$upscope $end
$upscope $end
$scope module fa $end
$var wire 1 A& a $end
$var wire 1 B& b $end
$var wire 1 C& cin $end
$var wire 1 D& cout $end
$var wire 1 E& sum $end
$upscope $end
$upscope $end
$scope begin alu_logic[41] $end
$var wire 1 F& temp_cin $end
$var parameter 7 G& i $end
$scope module alcu $end
$var wire 1 H& a $end
$var wire 1 I& b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$var wire 1 & s2 $end
$var wire 1 J& x $end
$var wire 1 K& y $end
$var wire 1 L& temp_y $end
$scope module tc $end
$var wire 1 L& B $end
$var wire 1 I& b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$upscope $end
$upscope $end
$scope module fa $end
$var wire 1 M& a $end
$var wire 1 N& b $end
$var wire 1 O& cin $end
$var wire 1 P& cout $end
$var wire 1 Q& sum $end
$upscope $end
$upscope $end
$scope begin alu_logic[42] $end
$var wire 1 R& temp_cin $end
$var parameter 7 S& i $end
$scope module alcu $end
$var wire 1 T& a $end
$var wire 1 U& b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$var wire 1 & s2 $end
$var wire 1 V& x $end
$var wire 1 W& y $end
$var wire 1 X& temp_y $end
$scope module tc $end
$var wire 1 X& B $end
$var wire 1 U& b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$upscope $end
$upscope $end
$scope module fa $end
$var wire 1 Y& a $end
$var wire 1 Z& b $end
$var wire 1 [& cin $end
$var wire 1 \& cout $end
$var wire 1 ]& sum $end
$upscope $end
$upscope $end
$scope begin alu_logic[43] $end
$var wire 1 ^& temp_cin $end
$var parameter 7 _& i $end
$scope module alcu $end
$var wire 1 `& a $end
$var wire 1 a& b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$var wire 1 & s2 $end
$var wire 1 b& x $end
$var wire 1 c& y $end
$var wire 1 d& temp_y $end
$scope module tc $end
$var wire 1 d& B $end
$var wire 1 a& b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$upscope $end
$upscope $end
$scope module fa $end
$var wire 1 e& a $end
$var wire 1 f& b $end
$var wire 1 g& cin $end
$var wire 1 h& cout $end
$var wire 1 i& sum $end
$upscope $end
$upscope $end
$scope begin alu_logic[44] $end
$var wire 1 j& temp_cin $end
$var parameter 7 k& i $end
$scope module alcu $end
$var wire 1 l& a $end
$var wire 1 m& b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$var wire 1 & s2 $end
$var wire 1 n& x $end
$var wire 1 o& y $end
$var wire 1 p& temp_y $end
$scope module tc $end
$var wire 1 p& B $end
$var wire 1 m& b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$upscope $end
$upscope $end
$scope module fa $end
$var wire 1 q& a $end
$var wire 1 r& b $end
$var wire 1 s& cin $end
$var wire 1 t& cout $end
$var wire 1 u& sum $end
$upscope $end
$upscope $end
$scope begin alu_logic[45] $end
$var wire 1 v& temp_cin $end
$var parameter 7 w& i $end
$scope module alcu $end
$var wire 1 x& a $end
$var wire 1 y& b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$var wire 1 & s2 $end
$var wire 1 z& x $end
$var wire 1 {& y $end
$var wire 1 |& temp_y $end
$scope module tc $end
$var wire 1 |& B $end
$var wire 1 y& b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$upscope $end
$upscope $end
$scope module fa $end
$var wire 1 }& a $end
$var wire 1 ~& b $end
$var wire 1 !' cin $end
$var wire 1 "' cout $end
$var wire 1 #' sum $end
$upscope $end
$upscope $end
$scope begin alu_logic[46] $end
$var wire 1 $' temp_cin $end
$var parameter 7 %' i $end
$scope module alcu $end
$var wire 1 &' a $end
$var wire 1 '' b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$var wire 1 & s2 $end
$var wire 1 (' x $end
$var wire 1 )' y $end
$var wire 1 *' temp_y $end
$scope module tc $end
$var wire 1 *' B $end
$var wire 1 '' b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$upscope $end
$upscope $end
$scope module fa $end
$var wire 1 +' a $end
$var wire 1 ,' b $end
$var wire 1 -' cin $end
$var wire 1 .' cout $end
$var wire 1 /' sum $end
$upscope $end
$upscope $end
$scope begin alu_logic[47] $end
$var wire 1 0' temp_cin $end
$var parameter 7 1' i $end
$scope module alcu $end
$var wire 1 2' a $end
$var wire 1 3' b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$var wire 1 & s2 $end
$var wire 1 4' x $end
$var wire 1 5' y $end
$var wire 1 6' temp_y $end
$scope module tc $end
$var wire 1 6' B $end
$var wire 1 3' b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$upscope $end
$upscope $end
$scope module fa $end
$var wire 1 7' a $end
$var wire 1 8' b $end
$var wire 1 9' cin $end
$var wire 1 :' cout $end
$var wire 1 ;' sum $end
$upscope $end
$upscope $end
$scope begin alu_logic[48] $end
$var wire 1 <' temp_cin $end
$var parameter 7 =' i $end
$scope module alcu $end
$var wire 1 >' a $end
$var wire 1 ?' b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$var wire 1 & s2 $end
$var wire 1 @' x $end
$var wire 1 A' y $end
$var wire 1 B' temp_y $end
$scope module tc $end
$var wire 1 B' B $end
$var wire 1 ?' b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$upscope $end
$upscope $end
$scope module fa $end
$var wire 1 C' a $end
$var wire 1 D' b $end
$var wire 1 E' cin $end
$var wire 1 F' cout $end
$var wire 1 G' sum $end
$upscope $end
$upscope $end
$scope begin alu_logic[49] $end
$var wire 1 H' temp_cin $end
$var parameter 7 I' i $end
$scope module alcu $end
$var wire 1 J' a $end
$var wire 1 K' b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$var wire 1 & s2 $end
$var wire 1 L' x $end
$var wire 1 M' y $end
$var wire 1 N' temp_y $end
$scope module tc $end
$var wire 1 N' B $end
$var wire 1 K' b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$upscope $end
$upscope $end
$scope module fa $end
$var wire 1 O' a $end
$var wire 1 P' b $end
$var wire 1 Q' cin $end
$var wire 1 R' cout $end
$var wire 1 S' sum $end
$upscope $end
$upscope $end
$scope begin alu_logic[50] $end
$var wire 1 T' temp_cin $end
$var parameter 7 U' i $end
$scope module alcu $end
$var wire 1 V' a $end
$var wire 1 W' b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$var wire 1 & s2 $end
$var wire 1 X' x $end
$var wire 1 Y' y $end
$var wire 1 Z' temp_y $end
$scope module tc $end
$var wire 1 Z' B $end
$var wire 1 W' b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$upscope $end
$upscope $end
$scope module fa $end
$var wire 1 [' a $end
$var wire 1 \' b $end
$var wire 1 ]' cin $end
$var wire 1 ^' cout $end
$var wire 1 _' sum $end
$upscope $end
$upscope $end
$scope begin alu_logic[51] $end
$var wire 1 `' temp_cin $end
$var parameter 7 a' i $end
$scope module alcu $end
$var wire 1 b' a $end
$var wire 1 c' b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$var wire 1 & s2 $end
$var wire 1 d' x $end
$var wire 1 e' y $end
$var wire 1 f' temp_y $end
$scope module tc $end
$var wire 1 f' B $end
$var wire 1 c' b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$upscope $end
$upscope $end
$scope module fa $end
$var wire 1 g' a $end
$var wire 1 h' b $end
$var wire 1 i' cin $end
$var wire 1 j' cout $end
$var wire 1 k' sum $end
$upscope $end
$upscope $end
$scope begin alu_logic[52] $end
$var wire 1 l' temp_cin $end
$var parameter 7 m' i $end
$scope module alcu $end
$var wire 1 n' a $end
$var wire 1 o' b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$var wire 1 & s2 $end
$var wire 1 p' x $end
$var wire 1 q' y $end
$var wire 1 r' temp_y $end
$scope module tc $end
$var wire 1 r' B $end
$var wire 1 o' b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$upscope $end
$upscope $end
$scope module fa $end
$var wire 1 s' a $end
$var wire 1 t' b $end
$var wire 1 u' cin $end
$var wire 1 v' cout $end
$var wire 1 w' sum $end
$upscope $end
$upscope $end
$scope begin alu_logic[53] $end
$var wire 1 x' temp_cin $end
$var parameter 7 y' i $end
$scope module alcu $end
$var wire 1 z' a $end
$var wire 1 {' b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$var wire 1 & s2 $end
$var wire 1 |' x $end
$var wire 1 }' y $end
$var wire 1 ~' temp_y $end
$scope module tc $end
$var wire 1 ~' B $end
$var wire 1 {' b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$upscope $end
$upscope $end
$scope module fa $end
$var wire 1 !( a $end
$var wire 1 "( b $end
$var wire 1 #( cin $end
$var wire 1 $( cout $end
$var wire 1 %( sum $end
$upscope $end
$upscope $end
$scope begin alu_logic[54] $end
$var wire 1 &( temp_cin $end
$var parameter 7 '( i $end
$scope module alcu $end
$var wire 1 (( a $end
$var wire 1 )( b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$var wire 1 & s2 $end
$var wire 1 *( x $end
$var wire 1 +( y $end
$var wire 1 ,( temp_y $end
$scope module tc $end
$var wire 1 ,( B $end
$var wire 1 )( b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$upscope $end
$upscope $end
$scope module fa $end
$var wire 1 -( a $end
$var wire 1 .( b $end
$var wire 1 /( cin $end
$var wire 1 0( cout $end
$var wire 1 1( sum $end
$upscope $end
$upscope $end
$scope begin alu_logic[55] $end
$var wire 1 2( temp_cin $end
$var parameter 7 3( i $end
$scope module alcu $end
$var wire 1 4( a $end
$var wire 1 5( b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$var wire 1 & s2 $end
$var wire 1 6( x $end
$var wire 1 7( y $end
$var wire 1 8( temp_y $end
$scope module tc $end
$var wire 1 8( B $end
$var wire 1 5( b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$upscope $end
$upscope $end
$scope module fa $end
$var wire 1 9( a $end
$var wire 1 :( b $end
$var wire 1 ;( cin $end
$var wire 1 <( cout $end
$var wire 1 =( sum $end
$upscope $end
$upscope $end
$scope begin alu_logic[56] $end
$var wire 1 >( temp_cin $end
$var parameter 7 ?( i $end
$scope module alcu $end
$var wire 1 @( a $end
$var wire 1 A( b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$var wire 1 & s2 $end
$var wire 1 B( x $end
$var wire 1 C( y $end
$var wire 1 D( temp_y $end
$scope module tc $end
$var wire 1 D( B $end
$var wire 1 A( b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$upscope $end
$upscope $end
$scope module fa $end
$var wire 1 E( a $end
$var wire 1 F( b $end
$var wire 1 G( cin $end
$var wire 1 H( cout $end
$var wire 1 I( sum $end
$upscope $end
$upscope $end
$scope begin alu_logic[57] $end
$var wire 1 J( temp_cin $end
$var parameter 7 K( i $end
$scope module alcu $end
$var wire 1 L( a $end
$var wire 1 M( b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$var wire 1 & s2 $end
$var wire 1 N( x $end
$var wire 1 O( y $end
$var wire 1 P( temp_y $end
$scope module tc $end
$var wire 1 P( B $end
$var wire 1 M( b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$upscope $end
$upscope $end
$scope module fa $end
$var wire 1 Q( a $end
$var wire 1 R( b $end
$var wire 1 S( cin $end
$var wire 1 T( cout $end
$var wire 1 U( sum $end
$upscope $end
$upscope $end
$scope begin alu_logic[58] $end
$var wire 1 V( temp_cin $end
$var parameter 7 W( i $end
$scope module alcu $end
$var wire 1 X( a $end
$var wire 1 Y( b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$var wire 1 & s2 $end
$var wire 1 Z( x $end
$var wire 1 [( y $end
$var wire 1 \( temp_y $end
$scope module tc $end
$var wire 1 \( B $end
$var wire 1 Y( b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$upscope $end
$upscope $end
$scope module fa $end
$var wire 1 ]( a $end
$var wire 1 ^( b $end
$var wire 1 _( cin $end
$var wire 1 `( cout $end
$var wire 1 a( sum $end
$upscope $end
$upscope $end
$scope begin alu_logic[59] $end
$var wire 1 b( temp_cin $end
$var parameter 7 c( i $end
$scope module alcu $end
$var wire 1 d( a $end
$var wire 1 e( b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$var wire 1 & s2 $end
$var wire 1 f( x $end
$var wire 1 g( y $end
$var wire 1 h( temp_y $end
$scope module tc $end
$var wire 1 h( B $end
$var wire 1 e( b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$upscope $end
$upscope $end
$scope module fa $end
$var wire 1 i( a $end
$var wire 1 j( b $end
$var wire 1 k( cin $end
$var wire 1 l( cout $end
$var wire 1 m( sum $end
$upscope $end
$upscope $end
$scope begin alu_logic[60] $end
$var wire 1 n( temp_cin $end
$var parameter 7 o( i $end
$scope module alcu $end
$var wire 1 p( a $end
$var wire 1 q( b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$var wire 1 & s2 $end
$var wire 1 r( x $end
$var wire 1 s( y $end
$var wire 1 t( temp_y $end
$scope module tc $end
$var wire 1 t( B $end
$var wire 1 q( b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$upscope $end
$upscope $end
$scope module fa $end
$var wire 1 u( a $end
$var wire 1 v( b $end
$var wire 1 w( cin $end
$var wire 1 x( cout $end
$var wire 1 y( sum $end
$upscope $end
$upscope $end
$scope begin alu_logic[61] $end
$var wire 1 z( temp_cin $end
$var parameter 7 {( i $end
$scope module alcu $end
$var wire 1 |( a $end
$var wire 1 }( b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$var wire 1 & s2 $end
$var wire 1 ~( x $end
$var wire 1 !) y $end
$var wire 1 ") temp_y $end
$scope module tc $end
$var wire 1 ") B $end
$var wire 1 }( b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$upscope $end
$upscope $end
$scope module fa $end
$var wire 1 #) a $end
$var wire 1 $) b $end
$var wire 1 %) cin $end
$var wire 1 &) cout $end
$var wire 1 ') sum $end
$upscope $end
$upscope $end
$scope begin alu_logic[62] $end
$var wire 1 () temp_cin $end
$var parameter 7 )) i $end
$scope module alcu $end
$var wire 1 *) a $end
$var wire 1 +) b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$var wire 1 & s2 $end
$var wire 1 ,) x $end
$var wire 1 -) y $end
$var wire 1 .) temp_y $end
$scope module tc $end
$var wire 1 .) B $end
$var wire 1 +) b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$upscope $end
$upscope $end
$scope module fa $end
$var wire 1 /) a $end
$var wire 1 0) b $end
$var wire 1 1) cin $end
$var wire 1 2) cout $end
$var wire 1 3) sum $end
$upscope $end
$upscope $end
$scope begin alu_logic[63] $end
$var wire 1 4) temp_cin $end
$var parameter 7 5) i $end
$scope module alcu $end
$var wire 1 6) a $end
$var wire 1 7) b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$var wire 1 & s2 $end
$var wire 1 8) x $end
$var wire 1 9) y $end
$var wire 1 :) temp_y $end
$scope module tc $end
$var wire 1 :) B $end
$var wire 1 7) b $end
$var wire 1 $ s0 $end
$var wire 1 % s1 $end
$upscope $end
$upscope $end
$scope module fa $end
$var wire 1 ;) a $end
$var wire 1 <) b $end
$var wire 1 =) cin $end
$var wire 1 >) cout $end
$var wire 1 ?) sum $end
$upscope $end
$upscope $end
$scope module sh $end
$var wire 1 @) carry $end
$var wire 1 ' s0 $end
$var wire 1 ( s1 $end
$var wire 64 A) xin [63:0] $end
$var wire 65 B) yout [64:0] $end
$var wire 65 C) temp_shift [64:0] $end
$scope begin shifter_logic[0] $end
$var parameter 2 D) i $end
$scope module fm $end
$var wire 1 E) a $end
$var wire 1 F) b $end
$var wire 1 G) c $end
$var wire 1 H) d $end
$var wire 1 I) mux_out $end
$var wire 1 ' sel0 $end
$var wire 1 ( sel1 $end
$upscope $end
$upscope $end
$scope begin shifter_logic[1] $end
$var parameter 2 J) i $end
$scope module fm $end
$var wire 1 K) a $end
$var wire 1 L) b $end
$var wire 1 M) c $end
$var wire 1 N) d $end
$var wire 1 O) mux_out $end
$var wire 1 ' sel0 $end
$var wire 1 ( sel1 $end
$upscope $end
$upscope $end
$scope begin shifter_logic[2] $end
$var parameter 3 P) i $end
$scope module fm $end
$var wire 1 Q) a $end
$var wire 1 R) b $end
$var wire 1 S) c $end
$var wire 1 T) d $end
$var wire 1 U) mux_out $end
$var wire 1 ' sel0 $end
$var wire 1 ( sel1 $end
$upscope $end
$upscope $end
$scope begin shifter_logic[3] $end
$var parameter 3 V) i $end
$scope module fm $end
$var wire 1 W) a $end
$var wire 1 X) b $end
$var wire 1 Y) c $end
$var wire 1 Z) d $end
$var wire 1 [) mux_out $end
$var wire 1 ' sel0 $end
$var wire 1 ( sel1 $end
$upscope $end
$upscope $end
$scope begin shifter_logic[4] $end
$var parameter 4 \) i $end
$scope module fm $end
$var wire 1 ]) a $end
$var wire 1 ^) b $end
$var wire 1 _) c $end
$var wire 1 `) d $end
$var wire 1 a) mux_out $end
$var wire 1 ' sel0 $end
$var wire 1 ( sel1 $end
$upscope $end
$upscope $end
$scope begin shifter_logic[5] $end
$var parameter 4 b) i $end
$scope module fm $end
$var wire 1 c) a $end
$var wire 1 d) b $end
$var wire 1 e) c $end
$var wire 1 f) d $end
$var wire 1 g) mux_out $end
$var wire 1 ' sel0 $end
$var wire 1 ( sel1 $end
$upscope $end
$upscope $end
$scope begin shifter_logic[6] $end
$var parameter 4 h) i $end
$scope module fm $end
$var wire 1 i) a $end
$var wire 1 j) b $end
$var wire 1 k) c $end
$var wire 1 l) d $end
$var wire 1 m) mux_out $end
$var wire 1 ' sel0 $end
$var wire 1 ( sel1 $end
$upscope $end
$upscope $end
$scope begin shifter_logic[7] $end
$var parameter 4 n) i $end
$scope module fm $end
$var wire 1 o) a $end
$var wire 1 p) b $end
$var wire 1 q) c $end
$var wire 1 r) d $end
$var wire 1 s) mux_out $end
$var wire 1 ' sel0 $end
$var wire 1 ( sel1 $end
$upscope $end
$upscope $end
$scope begin shifter_logic[8] $end
$var parameter 5 t) i $end
$scope module fm $end
$var wire 1 u) a $end
$var wire 1 v) b $end
$var wire 1 w) c $end
$var wire 1 x) d $end
$var wire 1 y) mux_out $end
$var wire 1 ' sel0 $end
$var wire 1 ( sel1 $end
$upscope $end
$upscope $end
$scope begin shifter_logic[9] $end
$var parameter 5 z) i $end
$scope module fm $end
$var wire 1 {) a $end
$var wire 1 |) b $end
$var wire 1 }) c $end
$var wire 1 ~) d $end
$var wire 1 !* mux_out $end
$var wire 1 ' sel0 $end
$var wire 1 ( sel1 $end
$upscope $end
$upscope $end
$scope begin shifter_logic[10] $end
$var parameter 5 "* i $end
$scope module fm $end
$var wire 1 #* a $end
$var wire 1 $* b $end
$var wire 1 %* c $end
$var wire 1 &* d $end
$var wire 1 '* mux_out $end
$var wire 1 ' sel0 $end
$var wire 1 ( sel1 $end
$upscope $end
$upscope $end
$scope begin shifter_logic[11] $end
$var parameter 5 (* i $end
$scope module fm $end
$var wire 1 )* a $end
$var wire 1 ** b $end
$var wire 1 +* c $end
$var wire 1 ,* d $end
$var wire 1 -* mux_out $end
$var wire 1 ' sel0 $end
$var wire 1 ( sel1 $end
$upscope $end
$upscope $end
$scope begin shifter_logic[12] $end
$var parameter 5 .* i $end
$scope module fm $end
$var wire 1 /* a $end
$var wire 1 0* b $end
$var wire 1 1* c $end
$var wire 1 2* d $end
$var wire 1 3* mux_out $end
$var wire 1 ' sel0 $end
$var wire 1 ( sel1 $end
$upscope $end
$upscope $end
$scope begin shifter_logic[13] $end
$var parameter 5 4* i $end
$scope module fm $end
$var wire 1 5* a $end
$var wire 1 6* b $end
$var wire 1 7* c $end
$var wire 1 8* d $end
$var wire 1 9* mux_out $end
$var wire 1 ' sel0 $end
$var wire 1 ( sel1 $end
$upscope $end
$upscope $end
$scope begin shifter_logic[14] $end
$var parameter 5 :* i $end
$scope module fm $end
$var wire 1 ;* a $end
$var wire 1 <* b $end
$var wire 1 =* c $end
$var wire 1 >* d $end
$var wire 1 ?* mux_out $end
$var wire 1 ' sel0 $end
$var wire 1 ( sel1 $end
$upscope $end
$upscope $end
$scope begin shifter_logic[15] $end
$var parameter 5 @* i $end
$scope module fm $end
$var wire 1 A* a $end
$var wire 1 B* b $end
$var wire 1 C* c $end
$var wire 1 D* d $end
$var wire 1 E* mux_out $end
$var wire 1 ' sel0 $end
$var wire 1 ( sel1 $end
$upscope $end
$upscope $end
$scope begin shifter_logic[16] $end
$var parameter 6 F* i $end
$scope module fm $end
$var wire 1 G* a $end
$var wire 1 H* b $end
$var wire 1 I* c $end
$var wire 1 J* d $end
$var wire 1 K* mux_out $end
$var wire 1 ' sel0 $end
$var wire 1 ( sel1 $end
$upscope $end
$upscope $end
$scope begin shifter_logic[17] $end
$var parameter 6 L* i $end
$scope module fm $end
$var wire 1 M* a $end
$var wire 1 N* b $end
$var wire 1 O* c $end
$var wire 1 P* d $end
$var wire 1 Q* mux_out $end
$var wire 1 ' sel0 $end
$var wire 1 ( sel1 $end
$upscope $end
$upscope $end
$scope begin shifter_logic[18] $end
$var parameter 6 R* i $end
$scope module fm $end
$var wire 1 S* a $end
$var wire 1 T* b $end
$var wire 1 U* c $end
$var wire 1 V* d $end
$var wire 1 W* mux_out $end
$var wire 1 ' sel0 $end
$var wire 1 ( sel1 $end
$upscope $end
$upscope $end
$scope begin shifter_logic[19] $end
$var parameter 6 X* i $end
$scope module fm $end
$var wire 1 Y* a $end
$var wire 1 Z* b $end
$var wire 1 [* c $end
$var wire 1 \* d $end
$var wire 1 ]* mux_out $end
$var wire 1 ' sel0 $end
$var wire 1 ( sel1 $end
$upscope $end
$upscope $end
$scope begin shifter_logic[20] $end
$var parameter 6 ^* i $end
$scope module fm $end
$var wire 1 _* a $end
$var wire 1 `* b $end
$var wire 1 a* c $end
$var wire 1 b* d $end
$var wire 1 c* mux_out $end
$var wire 1 ' sel0 $end
$var wire 1 ( sel1 $end
$upscope $end
$upscope $end
$scope begin shifter_logic[21] $end
$var parameter 6 d* i $end
$scope module fm $end
$var wire 1 e* a $end
$var wire 1 f* b $end
$var wire 1 g* c $end
$var wire 1 h* d $end
$var wire 1 i* mux_out $end
$var wire 1 ' sel0 $end
$var wire 1 ( sel1 $end
$upscope $end
$upscope $end
$scope begin shifter_logic[22] $end
$var parameter 6 j* i $end
$scope module fm $end
$var wire 1 k* a $end
$var wire 1 l* b $end
$var wire 1 m* c $end
$var wire 1 n* d $end
$var wire 1 o* mux_out $end
$var wire 1 ' sel0 $end
$var wire 1 ( sel1 $end
$upscope $end
$upscope $end
$scope begin shifter_logic[23] $end
$var parameter 6 p* i $end
$scope module fm $end
$var wire 1 q* a $end
$var wire 1 r* b $end
$var wire 1 s* c $end
$var wire 1 t* d $end
$var wire 1 u* mux_out $end
$var wire 1 ' sel0 $end
$var wire 1 ( sel1 $end
$upscope $end
$upscope $end
$scope begin shifter_logic[24] $end
$var parameter 6 v* i $end
$scope module fm $end
$var wire 1 w* a $end
$var wire 1 x* b $end
$var wire 1 y* c $end
$var wire 1 z* d $end
$var wire 1 {* mux_out $end
$var wire 1 ' sel0 $end
$var wire 1 ( sel1 $end
$upscope $end
$upscope $end
$scope begin shifter_logic[25] $end
$var parameter 6 |* i $end
$scope module fm $end
$var wire 1 }* a $end
$var wire 1 ~* b $end
$var wire 1 !+ c $end
$var wire 1 "+ d $end
$var wire 1 #+ mux_out $end
$var wire 1 ' sel0 $end
$var wire 1 ( sel1 $end
$upscope $end
$upscope $end
$scope begin shifter_logic[26] $end
$var parameter 6 $+ i $end
$scope module fm $end
$var wire 1 %+ a $end
$var wire 1 &+ b $end
$var wire 1 '+ c $end
$var wire 1 (+ d $end
$var wire 1 )+ mux_out $end
$var wire 1 ' sel0 $end
$var wire 1 ( sel1 $end
$upscope $end
$upscope $end
$scope begin shifter_logic[27] $end
$var parameter 6 *+ i $end
$scope module fm $end
$var wire 1 ++ a $end
$var wire 1 ,+ b $end
$var wire 1 -+ c $end
$var wire 1 .+ d $end
$var wire 1 /+ mux_out $end
$var wire 1 ' sel0 $end
$var wire 1 ( sel1 $end
$upscope $end
$upscope $end
$scope begin shifter_logic[28] $end
$var parameter 6 0+ i $end
$scope module fm $end
$var wire 1 1+ a $end
$var wire 1 2+ b $end
$var wire 1 3+ c $end
$var wire 1 4+ d $end
$var wire 1 5+ mux_out $end
$var wire 1 ' sel0 $end
$var wire 1 ( sel1 $end
$upscope $end
$upscope $end
$scope begin shifter_logic[29] $end
$var parameter 6 6+ i $end
$scope module fm $end
$var wire 1 7+ a $end
$var wire 1 8+ b $end
$var wire 1 9+ c $end
$var wire 1 :+ d $end
$var wire 1 ;+ mux_out $end
$var wire 1 ' sel0 $end
$var wire 1 ( sel1 $end
$upscope $end
$upscope $end
$scope begin shifter_logic[30] $end
$var parameter 6 <+ i $end
$scope module fm $end
$var wire 1 =+ a $end
$var wire 1 >+ b $end
$var wire 1 ?+ c $end
$var wire 1 @+ d $end
$var wire 1 A+ mux_out $end
$var wire 1 ' sel0 $end
$var wire 1 ( sel1 $end
$upscope $end
$upscope $end
$scope begin shifter_logic[31] $end
$var parameter 6 B+ i $end
$scope module fm $end
$var wire 1 C+ a $end
$var wire 1 D+ b $end
$var wire 1 E+ c $end
$var wire 1 F+ d $end
$var wire 1 G+ mux_out $end
$var wire 1 ' sel0 $end
$var wire 1 ( sel1 $end
$upscope $end
$upscope $end
$scope begin shifter_logic[32] $end
$var parameter 7 H+ i $end
$scope module fm $end
$var wire 1 I+ a $end
$var wire 1 J+ b $end
$var wire 1 K+ c $end
$var wire 1 L+ d $end
$var wire 1 M+ mux_out $end
$var wire 1 ' sel0 $end
$var wire 1 ( sel1 $end
$upscope $end
$upscope $end
$scope begin shifter_logic[33] $end
$var parameter 7 N+ i $end
$scope module fm $end
$var wire 1 O+ a $end
$var wire 1 P+ b $end
$var wire 1 Q+ c $end
$var wire 1 R+ d $end
$var wire 1 S+ mux_out $end
$var wire 1 ' sel0 $end
$var wire 1 ( sel1 $end
$upscope $end
$upscope $end
$scope begin shifter_logic[34] $end
$var parameter 7 T+ i $end
$scope module fm $end
$var wire 1 U+ a $end
$var wire 1 V+ b $end
$var wire 1 W+ c $end
$var wire 1 X+ d $end
$var wire 1 Y+ mux_out $end
$var wire 1 ' sel0 $end
$var wire 1 ( sel1 $end
$upscope $end
$upscope $end
$scope begin shifter_logic[35] $end
$var parameter 7 Z+ i $end
$scope module fm $end
$var wire 1 [+ a $end
$var wire 1 \+ b $end
$var wire 1 ]+ c $end
$var wire 1 ^+ d $end
$var wire 1 _+ mux_out $end
$var wire 1 ' sel0 $end
$var wire 1 ( sel1 $end
$upscope $end
$upscope $end
$scope begin shifter_logic[36] $end
$var parameter 7 `+ i $end
$scope module fm $end
$var wire 1 a+ a $end
$var wire 1 b+ b $end
$var wire 1 c+ c $end
$var wire 1 d+ d $end
$var wire 1 e+ mux_out $end
$var wire 1 ' sel0 $end
$var wire 1 ( sel1 $end
$upscope $end
$upscope $end
$scope begin shifter_logic[37] $end
$var parameter 7 f+ i $end
$scope module fm $end
$var wire 1 g+ a $end
$var wire 1 h+ b $end
$var wire 1 i+ c $end
$var wire 1 j+ d $end
$var wire 1 k+ mux_out $end
$var wire 1 ' sel0 $end
$var wire 1 ( sel1 $end
$upscope $end
$upscope $end
$scope begin shifter_logic[38] $end
$var parameter 7 l+ i $end
$scope module fm $end
$var wire 1 m+ a $end
$var wire 1 n+ b $end
$var wire 1 o+ c $end
$var wire 1 p+ d $end
$var wire 1 q+ mux_out $end
$var wire 1 ' sel0 $end
$var wire 1 ( sel1 $end
$upscope $end
$upscope $end
$scope begin shifter_logic[39] $end
$var parameter 7 r+ i $end
$scope module fm $end
$var wire 1 s+ a $end
$var wire 1 t+ b $end
$var wire 1 u+ c $end
$var wire 1 v+ d $end
$var wire 1 w+ mux_out $end
$var wire 1 ' sel0 $end
$var wire 1 ( sel1 $end
$upscope $end
$upscope $end
$scope begin shifter_logic[40] $end
$var parameter 7 x+ i $end
$scope module fm $end
$var wire 1 y+ a $end
$var wire 1 z+ b $end
$var wire 1 {+ c $end
$var wire 1 |+ d $end
$var wire 1 }+ mux_out $end
$var wire 1 ' sel0 $end
$var wire 1 ( sel1 $end
$upscope $end
$upscope $end
$scope begin shifter_logic[41] $end
$var parameter 7 ~+ i $end
$scope module fm $end
$var wire 1 !, a $end
$var wire 1 ", b $end
$var wire 1 #, c $end
$var wire 1 $, d $end
$var wire 1 %, mux_out $end
$var wire 1 ' sel0 $end
$var wire 1 ( sel1 $end
$upscope $end
$upscope $end
$scope begin shifter_logic[42] $end
$var parameter 7 &, i $end
$scope module fm $end
$var wire 1 ', a $end
$var wire 1 (, b $end
$var wire 1 ), c $end
$var wire 1 *, d $end
$var wire 1 +, mux_out $end
$var wire 1 ' sel0 $end
$var wire 1 ( sel1 $end
$upscope $end
$upscope $end
$scope begin shifter_logic[43] $end
$var parameter 7 ,, i $end
$scope module fm $end
$var wire 1 -, a $end
$var wire 1 ., b $end
$var wire 1 /, c $end
$var wire 1 0, d $end
$var wire 1 1, mux_out $end
$var wire 1 ' sel0 $end
$var wire 1 ( sel1 $end
$upscope $end
$upscope $end
$scope begin shifter_logic[44] $end
$var parameter 7 2, i $end
$scope module fm $end
$var wire 1 3, a $end
$var wire 1 4, b $end
$var wire 1 5, c $end
$var wire 1 6, d $end
$var wire 1 7, mux_out $end
$var wire 1 ' sel0 $end
$var wire 1 ( sel1 $end
$upscope $end
$upscope $end
$scope begin shifter_logic[45] $end
$var parameter 7 8, i $end
$scope module fm $end
$var wire 1 9, a $end
$var wire 1 :, b $end
$var wire 1 ;, c $end
$var wire 1 <, d $end
$var wire 1 =, mux_out $end
$var wire 1 ' sel0 $end
$var wire 1 ( sel1 $end
$upscope $end
$upscope $end
$scope begin shifter_logic[46] $end
$var parameter 7 >, i $end
$scope module fm $end
$var wire 1 ?, a $end
$var wire 1 @, b $end
$var wire 1 A, c $end
$var wire 1 B, d $end
$var wire 1 C, mux_out $end
$var wire 1 ' sel0 $end
$var wire 1 ( sel1 $end
$upscope $end
$upscope $end
$scope begin shifter_logic[47] $end
$var parameter 7 D, i $end
$scope module fm $end
$var wire 1 E, a $end
$var wire 1 F, b $end
$var wire 1 G, c $end
$var wire 1 H, d $end
$var wire 1 I, mux_out $end
$var wire 1 ' sel0 $end
$var wire 1 ( sel1 $end
$upscope $end
$upscope $end
$scope begin shifter_logic[48] $end
$var parameter 7 J, i $end
$scope module fm $end
$var wire 1 K, a $end
$var wire 1 L, b $end
$var wire 1 M, c $end
$var wire 1 N, d $end
$var wire 1 O, mux_out $end
$var wire 1 ' sel0 $end
$var wire 1 ( sel1 $end
$upscope $end
$upscope $end
$scope begin shifter_logic[49] $end
$var parameter 7 P, i $end
$scope module fm $end
$var wire 1 Q, a $end
$var wire 1 R, b $end
$var wire 1 S, c $end
$var wire 1 T, d $end
$var wire 1 U, mux_out $end
$var wire 1 ' sel0 $end
$var wire 1 ( sel1 $end
$upscope $end
$upscope $end
$scope begin shifter_logic[50] $end
$var parameter 7 V, i $end
$scope module fm $end
$var wire 1 W, a $end
$var wire 1 X, b $end
$var wire 1 Y, c $end
$var wire 1 Z, d $end
$var wire 1 [, mux_out $end
$var wire 1 ' sel0 $end
$var wire 1 ( sel1 $end
$upscope $end
$upscope $end
$scope begin shifter_logic[51] $end
$var parameter 7 \, i $end
$scope module fm $end
$var wire 1 ], a $end
$var wire 1 ^, b $end
$var wire 1 _, c $end
$var wire 1 `, d $end
$var wire 1 a, mux_out $end
$var wire 1 ' sel0 $end
$var wire 1 ( sel1 $end
$upscope $end
$upscope $end
$scope begin shifter_logic[52] $end
$var parameter 7 b, i $end
$scope module fm $end
$var wire 1 c, a $end
$var wire 1 d, b $end
$var wire 1 e, c $end
$var wire 1 f, d $end
$var wire 1 g, mux_out $end
$var wire 1 ' sel0 $end
$var wire 1 ( sel1 $end
$upscope $end
$upscope $end
$scope begin shifter_logic[53] $end
$var parameter 7 h, i $end
$scope module fm $end
$var wire 1 i, a $end
$var wire 1 j, b $end
$var wire 1 k, c $end
$var wire 1 l, d $end
$var wire 1 m, mux_out $end
$var wire 1 ' sel0 $end
$var wire 1 ( sel1 $end
$upscope $end
$upscope $end
$scope begin shifter_logic[54] $end
$var parameter 7 n, i $end
$scope module fm $end
$var wire 1 o, a $end
$var wire 1 p, b $end
$var wire 1 q, c $end
$var wire 1 r, d $end
$var wire 1 s, mux_out $end
$var wire 1 ' sel0 $end
$var wire 1 ( sel1 $end
$upscope $end
$upscope $end
$scope begin shifter_logic[55] $end
$var parameter 7 t, i $end
$scope module fm $end
$var wire 1 u, a $end
$var wire 1 v, b $end
$var wire 1 w, c $end
$var wire 1 x, d $end
$var wire 1 y, mux_out $end
$var wire 1 ' sel0 $end
$var wire 1 ( sel1 $end
$upscope $end
$upscope $end
$scope begin shifter_logic[56] $end
$var parameter 7 z, i $end
$scope module fm $end
$var wire 1 {, a $end
$var wire 1 |, b $end
$var wire 1 }, c $end
$var wire 1 ~, d $end
$var wire 1 !- mux_out $end
$var wire 1 ' sel0 $end
$var wire 1 ( sel1 $end
$upscope $end
$upscope $end
$scope begin shifter_logic[57] $end
$var parameter 7 "- i $end
$scope module fm $end
$var wire 1 #- a $end
$var wire 1 $- b $end
$var wire 1 %- c $end
$var wire 1 &- d $end
$var wire 1 '- mux_out $end
$var wire 1 ' sel0 $end
$var wire 1 ( sel1 $end
$upscope $end
$upscope $end
$scope begin shifter_logic[58] $end
$var parameter 7 (- i $end
$scope module fm $end
$var wire 1 )- a $end
$var wire 1 *- b $end
$var wire 1 +- c $end
$var wire 1 ,- d $end
$var wire 1 -- mux_out $end
$var wire 1 ' sel0 $end
$var wire 1 ( sel1 $end
$upscope $end
$upscope $end
$scope begin shifter_logic[59] $end
$var parameter 7 .- i $end
$scope module fm $end
$var wire 1 /- a $end
$var wire 1 0- b $end
$var wire 1 1- c $end
$var wire 1 2- d $end
$var wire 1 3- mux_out $end
$var wire 1 ' sel0 $end
$var wire 1 ( sel1 $end
$upscope $end
$upscope $end
$scope begin shifter_logic[60] $end
$var parameter 7 4- i $end
$scope module fm $end
$var wire 1 5- a $end
$var wire 1 6- b $end
$var wire 1 7- c $end
$var wire 1 8- d $end
$var wire 1 9- mux_out $end
$var wire 1 ' sel0 $end
$var wire 1 ( sel1 $end
$upscope $end
$upscope $end
$scope begin shifter_logic[61] $end
$var parameter 7 :- i $end
$scope module fm $end
$var wire 1 ;- a $end
$var wire 1 <- b $end
$var wire 1 =- c $end
$var wire 1 >- d $end
$var wire 1 ?- mux_out $end
$var wire 1 ' sel0 $end
$var wire 1 ( sel1 $end
$upscope $end
$upscope $end
$scope begin shifter_logic[62] $end
$var parameter 7 @- i $end
$scope module fm $end
$var wire 1 A- a $end
$var wire 1 B- b $end
$var wire 1 C- c $end
$var wire 1 D- d $end
$var wire 1 E- mux_out $end
$var wire 1 ' sel0 $end
$var wire 1 ( sel1 $end
$upscope $end
$upscope $end
$scope begin shifter_logic[63] $end
$var parameter 7 F- i $end
$scope module fm $end
$var wire 1 G- a $end
$var wire 1 H- b $end
$var wire 1 I- c $end
$var wire 1 J- d $end
$var wire 1 K- mux_out $end
$var wire 1 ' sel0 $end
$var wire 1 ( sel1 $end
$upscope $end
$upscope $end
$scope begin shifter_logic[64] $end
$var parameter 8 L- i $end
$scope module fm $end
$var wire 1 M- a $end
$var wire 1 N- b $end
$var wire 1 O- c $end
$var wire 1 P- d $end
$var wire 1 Q- mux_out $end
$var wire 1 ' sel0 $end
$var wire 1 ( sel1 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1000000 L-
b111111 F-
b111110 @-
b111101 :-
b111100 4-
b111011 .-
b111010 (-
b111001 "-
b111000 z,
b110111 t,
b110110 n,
b110101 h,
b110100 b,
b110011 \,
b110010 V,
b110001 P,
b110000 J,
b101111 D,
b101110 >,
b101101 8,
b101100 2,
b101011 ,,
b101010 &,
b101001 ~+
b101000 x+
b100111 r+
b100110 l+
b100101 f+
b100100 `+
b100011 Z+
b100010 T+
b100001 N+
b100000 H+
b11111 B+
b11110 <+
b11101 6+
b11100 0+
b11011 *+
b11010 $+
b11001 |*
b11000 v*
b10111 p*
b10110 j*
b10101 d*
b10100 ^*
b10011 X*
b10010 R*
b10001 L*
b10000 F*
b1111 @*
b1110 :*
b1101 4*
b1100 .*
b1011 (*
b1010 "*
b1001 z)
b1000 t)
b111 n)
b110 h)
b101 b)
b100 \)
b11 V)
b10 P)
b1 J)
b0 D)
b111111 5)
b111110 ))
b111101 {(
b111100 o(
b111011 c(
b111010 W(
b111001 K(
b111000 ?(
b110111 3(
b110110 '(
b110101 y'
b110100 m'
b110011 a'
b110010 U'
b110001 I'
b110000 ='
b101111 1'
b101110 %'
b101101 w&
b101100 k&
b101011 _&
b101010 S&
b101001 G&
b101000 ;&
b100111 /&
b100110 #&
b100101 u%
b100100 i%
b100011 ]%
b100010 Q%
b100001 E%
b100000 9%
b11111 -%
b11110 !%
b11101 s$
b11100 g$
b11011 [$
b11010 O$
b11001 C$
b11000 7$
b10111 +$
b10110 }#
b10101 q#
b10100 e#
b10011 Y#
b10010 M#
b10001 A#
b10000 5#
b1111 )#
b1110 {"
b1101 o"
b1100 c"
b1011 W"
b1010 K"
b1001 ?"
b1000 3"
b111 '"
b110 y
b101 m
b100 a
b11 U
b10 I
b1 =
b0 1
$end
#0
$dumpvars
0Q-
0P-
0O-
0N-
0M-
0K-
0J-
0I-
0H-
0G-
0E-
0D-
0C-
0B-
0A-
0?-
0>-
0=-
0<-
0;-
09-
08-
07-
06-
05-
03-
02-
01-
00-
0/-
0--
0,-
0+-
0*-
0)-
0'-
0&-
0%-
0$-
0#-
0!-
0~,
0},
0|,
0{,
0y,
0x,
0w,
0v,
0u,
0s,
0r,
0q,
0p,
0o,
0m,
0l,
0k,
0j,
0i,
0g,
0f,
0e,
0d,
0c,
0a,
0`,
0_,
0^,
0],
0[,
0Z,
0Y,
0X,
0W,
0U,
0T,
0S,
0R,
0Q,
0O,
0N,
0M,
0L,
0K,
0I,
0H,
0G,
0F,
0E,
0C,
0B,
0A,
0@,
0?,
0=,
0<,
0;,
0:,
09,
07,
06,
05,
04,
03,
01,
00,
0/,
0.,
0-,
0+,
0*,
0),
0(,
0',
0%,
0$,
0#,
0",
0!,
0}+
0|+
0{+
0z+
0y+
0w+
0v+
0u+
0t+
0s+
0q+
0p+
0o+
0n+
0m+
0k+
0j+
0i+
0h+
0g+
0e+
0d+
0c+
0b+
0a+
0_+
0^+
0]+
0\+
0[+
0Y+
0X+
0W+
0V+
0U+
0S+
0R+
0Q+
0P+
0O+
0M+
0L+
0K+
0J+
0I+
0G+
0F+
0E+
0D+
0C+
0A+
0@+
0?+
0>+
0=+
0;+
0:+
09+
08+
07+
05+
04+
03+
02+
01+
0/+
0.+
0-+
0,+
0++
0)+
0(+
0'+
0&+
0%+
0#+
0"+
0!+
0~*
0}*
0{*
0z*
0y*
0x*
0w*
0u*
0t*
0s*
0r*
0q*
0o*
0n*
0m*
0l*
0k*
0i*
0h*
0g*
0f*
0e*
0c*
0b*
0a*
0`*
0_*
0]*
0\*
0[*
0Z*
0Y*
0W*
0V*
0U*
0T*
0S*
0Q*
0P*
0O*
0N*
0M*
0K*
0J*
0I*
0H*
0G*
0E*
0D*
0C*
0B*
0A*
0?*
0>*
0=*
0<*
0;*
09*
08*
07*
06*
05*
03*
02*
01*
00*
0/*
0-*
0,*
0+*
0**
0)*
0'*
0&*
0%*
0$*
0#*
0!*
0~)
0})
0|)
0{)
0y)
0x)
0w)
0v)
0u)
0s)
0r)
0q)
0p)
0o)
0m)
0l)
0k)
0j)
0i)
0g)
0f)
0e)
1d)
0c)
1a)
0`)
0_)
0^)
1])
0[)
0Z)
1Y)
0X)
0W)
0U)
0T)
0S)
0R)
0Q)
0O)
0N)
0M)
0L)
0K)
0I)
0H)
0G)
0F)
0E)
b10000 C)
b10000 B)
b10000 A)
0@)
0?)
0>)
0=)
0<)
0;)
0:)
09)
08)
07)
06)
04)
03)
02)
01)
00)
0/)
0.)
0-)
0,)
0+)
0*)
0()
0')
0&)
0%)
0$)
0#)
0")
0!)
0~(
0}(
0|(
0z(
0y(
0x(
0w(
0v(
0u(
0t(
0s(
0r(
0q(
0p(
0n(
0m(
0l(
0k(
0j(
0i(
0h(
0g(
0f(
0e(
0d(
0b(
0a(
0`(
0_(
0^(
0](
0\(
0[(
0Z(
0Y(
0X(
0V(
0U(
0T(
0S(
0R(
0Q(
0P(
0O(
0N(
0M(
0L(
0J(
0I(
0H(
0G(
0F(
0E(
0D(
0C(
0B(
0A(
0@(
0>(
0=(
0<(
0;(
0:(
09(
08(
07(
06(
05(
04(
02(
01(
00(
0/(
0.(
0-(
0,(
0+(
0*(
0)(
0((
0&(
0%(
0$(
0#(
0"(
0!(
0~'
0}'
0|'
0{'
0z'
0x'
0w'
0v'
0u'
0t'
0s'
0r'
0q'
0p'
0o'
0n'
0l'
0k'
0j'
0i'
0h'
0g'
0f'
0e'
0d'
0c'
0b'
0`'
0_'
0^'
0]'
0\'
0['
0Z'
0Y'
0X'
0W'
0V'
0T'
0S'
0R'
0Q'
0P'
0O'
0N'
0M'
0L'
0K'
0J'
0H'
0G'
0F'
0E'
0D'
0C'
0B'
0A'
0@'
0?'
0>'
0<'
0;'
0:'
09'
08'
07'
06'
05'
04'
03'
02'
00'
0/'
0.'
0-'
0,'
0+'
0*'
0)'
0('
0''
0&'
0$'
0#'
0"'
0!'
0~&
0}&
0|&
0{&
0z&
0y&
0x&
0v&
0u&
0t&
0s&
0r&
0q&
0p&
0o&
0n&
0m&
0l&
0j&
0i&
0h&
0g&
0f&
0e&
0d&
0c&
0b&
0a&
0`&
0^&
0]&
0\&
0[&
0Z&
0Y&
0X&
0W&
0V&
0U&
0T&
0R&
0Q&
0P&
0O&
0N&
0M&
0L&
0K&
0J&
0I&
0H&
0F&
0E&
0D&
0C&
0B&
0A&
0@&
0?&
0>&
0=&
0<&
0:&
09&
08&
07&
06&
05&
04&
03&
02&
01&
00&
0.&
0-&
0,&
0+&
0*&
0)&
0(&
0'&
0&&
0%&
0$&
0"&
0!&
0~%
0}%
0|%
0{%
0z%
0y%
0x%
0w%
0v%
0t%
0s%
0r%
0q%
0p%
0o%
0n%
0m%
0l%
0k%
0j%
0h%
0g%
0f%
0e%
0d%
0c%
0b%
0a%
0`%
0_%
0^%
0\%
0[%
0Z%
0Y%
0X%
0W%
0V%
0U%
0T%
0S%
0R%
0P%
0O%
0N%
0M%
0L%
0K%
0J%
0I%
0H%
0G%
0F%
0D%
0C%
0B%
0A%
0@%
0?%
0>%
0=%
0<%
0;%
0:%
08%
07%
06%
05%
04%
03%
02%
01%
00%
0/%
0.%
0,%
0+%
0*%
0)%
0(%
0'%
0&%
0%%
0$%
0#%
0"%
0~$
0}$
0|$
0{$
0z$
0y$
0x$
0w$
0v$
0u$
0t$
0r$
0q$
0p$
0o$
0n$
0m$
0l$
0k$
0j$
0i$
0h$
0f$
0e$
0d$
0c$
0b$
0a$
0`$
0_$
0^$
0]$
0\$
0Z$
0Y$
0X$
0W$
0V$
0U$
0T$
0S$
0R$
0Q$
0P$
0N$
0M$
0L$
0K$
0J$
0I$
0H$
0G$
0F$
0E$
0D$
0B$
0A$
0@$
0?$
0>$
0=$
0<$
0;$
0:$
09$
08$
06$
05$
04$
03$
02$
01$
00$
0/$
0.$
0-$
0,$
0*$
0)$
0($
0'$
0&$
0%$
0$$
0#$
0"$
0!$
0~#
0|#
0{#
0z#
0y#
0x#
0w#
0v#
0u#
0t#
0s#
0r#
0p#
0o#
0n#
0m#
0l#
0k#
0j#
0i#
0h#
0g#
0f#
0d#
0c#
0b#
0a#
0`#
0_#
0^#
0]#
0\#
0[#
0Z#
0X#
0W#
0V#
0U#
0T#
0S#
0R#
0Q#
0P#
0O#
0N#
0L#
0K#
0J#
0I#
0H#
0G#
0F#
0E#
0D#
0C#
0B#
0@#
0?#
0>#
0=#
0<#
0;#
0:#
09#
08#
07#
06#
04#
03#
02#
01#
00#
0/#
0.#
0-#
0,#
0+#
0*#
0(#
0'#
0&#
0%#
0$#
0##
0"#
0!#
0~"
0}"
0|"
0z"
0y"
0x"
0w"
0v"
0u"
0t"
0s"
0r"
0q"
0p"
0n"
0m"
0l"
0k"
0j"
0i"
0h"
0g"
0f"
0e"
0d"
0b"
0a"
0`"
0_"
0^"
0]"
0\"
0["
0Z"
0Y"
0X"
0V"
0U"
0T"
0S"
0R"
0Q"
0P"
0O"
0N"
0M"
0L"
0J"
0I"
0H"
0G"
0F"
0E"
0D"
0C"
0B"
0A"
0@"
0>"
0="
0<"
0;"
0:"
09"
08"
07"
06"
05"
04"
02"
01"
00"
0/"
0."
0-"
0,"
0+"
0*"
0)"
0("
0&"
0%"
0$"
0#"
0""
0!"
0~
0}
0|
0{
0z
0x
0w
0v
0u
0t
0s
0r
0q
0p
0o
0n
0l
1k
0j
1i
0h
0g
0f
0e
0d
0c
0b
1`
0_
1^
1]
0\
1[
0Z
0Y
1X
0W
1V
1T
0S
1R
1Q
1P
0O
1N
1M
0L
1K
0J
1H
0G
1F
0E
1D
1C
1B
1A
1@
1?
1>
0<
0;
0:
09
08
07
06
05
04
03
02
00
b1110 /
0.
b10000 -
b10000 ,
b10000 +
b1010 *
b110 )
0(
0'
0&
0%
1$
0#
b110 "
b1010 !
$end
#10
1.
1Q-
1M-
1I-
1@)
1>)
1=)
14)
12)
11)
1()
1&)
1%)
1z(
1x(
1w(
1n(
1l(
1k(
1b(
1`(
1_(
1V(
1T(
1S(
1J(
1H(
1G(
1>(
1<(
1;(
12(
10(
1/(
1&(
1$(
1#(
1x'
1v'
1u'
1l'
1j'
1i'
1`'
1^'
1]'
1T'
1R'
1Q'
1H'
1F'
1E'
1<'
1:'
19'
10'
1.'
1-'
1$'
1"'
1!'
1v&
1t&
1s&
1j&
1h&
1g&
1^&
1\&
1[&
1R&
1P&
1O&
1F&
1D&
1C&
1:&
18&
17&
1.&
1,&
1+&
1"&
1~%
1}%
1t%
1r%
1q%
1h%
1f%
1e%
1\%
1Z%
1Y%
1P%
1N%
1M%
1D%
1B%
1A%
18%
16%
15%
1,%
1*%
1)%
1~$
1|$
1{$
1r$
1p$
1o$
1f$
1d$
1c$
1Z$
1X$
1W$
1N$
1L$
1K$
1B$
1@$
1?$
16$
14$
13$
1*$
1($
1'$
1|#
1z#
1y#
1p#
1n#
1m#
1d#
1b#
1a#
1X#
1V#
1U#
1L#
1J#
1I#
1@#
1>#
1=#
14#
12#
11#
1(#
1&#
1%#
1z"
1x"
1w"
1n"
1l"
1k"
1b"
1`"
1_"
1V"
1T"
1S"
1J"
1H"
1G"
1>"
1<"
0[)
1;"
12"
10"
1i
0U)
1`
1/"
0^)
0W)
0S)
1^
1&"
0_
1$"
1]
0O)
1T
0a)
1#"
0g)
0m)
0s)
0y)
0!*
0'*
0-*
03*
09*
0?*
0E*
0K*
0Q*
0W*
0]*
0c*
0i*
0o*
0u*
0{*
0#+
0)+
0/+
05+
0;+
0A+
0G+
0M+
0S+
0Y+
0_+
0e+
0k+
0q+
0w+
0}+
0%,
0+,
01,
07,
0=,
0C,
0I,
0O,
0U,
0[,
0a,
0g,
0m,
0s,
0y,
0!-
0'-
0--
03-
09-
0?-
0E-
0K-
0X)
0Q)
0M)
1R
1x
0S
1v
b1 -
1Q
b10000000000000000000000000000000000000000000000000000000000000001 ,
b10000000000000000000000000000000000000000000000000000000000000001 B)
1I)
1H
1E
1u
0R)
0K)
0G)
1F
1<
0d)
0])
0Y)
1l
0j)
0c)
0_)
0p)
0i)
0e)
0v)
0o)
0k)
0|)
0u)
0q)
0$*
0{)
0w)
0**
0#*
0})
00*
0)*
0%*
06*
0/*
0+*
0<*
05*
01*
0B*
0;*
07*
0H*
0A*
0=*
0N*
0G*
0C*
0T*
0M*
0I*
0Z*
0S*
0O*
0`*
0Y*
0U*
0f*
0_*
0[*
0l*
0e*
0a*
0r*
0k*
0g*
0x*
0q*
0m*
0~*
0w*
0s*
0&+
0}*
0y*
0,+
0%+
0!+
02+
0++
0'+
08+
01+
0-+
0>+
07+
03+
0D+
0=+
09+
0J+
0C+
0?+
0P+
0I+
0E+
0V+
0O+
0K+
0\+
0U+
0Q+
0b+
0[+
0W+
0h+
0a+
0]+
0n+
0g+
0c+
0t+
0m+
0i+
0z+
0s+
0o+
0",
0y+
0u+
0(,
0!,
0{+
0.,
0',
0#,
04,
0-,
0),
0:,
03,
0/,
0@,
09,
05,
0F,
0?,
0;,
0L,
0E,
0A,
0R,
0K,
0G,
0X,
0Q,
0M,
0^,
0W,
0S,
0d,
0],
0Y,
0j,
0c,
0_,
0p,
0i,
0e,
0v,
0o,
0k,
0|,
0u,
0q,
0$-
0{,
0w,
0*-
0#-
0},
00-
0)-
0%-
06-
0/-
0+-
0<-
05-
01-
0B-
0;-
07-
0H-
0A-
0=-
0N-
0G-
0C-
0G
1:
0k
b1111111111111111111111111111111111111111111111111111111111111111 /
1j
0w
0%"
01"
0="
0I"
0U"
0a"
0m"
0y"
0'#
03#
0?#
0K#
0W#
0c#
0o#
0{#
0)$
05$
0A$
0M$
0Y$
0e$
0q$
0}$
0+%
07%
0C%
0O%
0[%
0g%
0s%
0!&
0-&
09&
0E&
0Q&
0]&
0i&
0u&
0#'
0/'
0;'
0G'
0S'
0_'
0k'
0w'
0%(
01(
0=(
0I(
0U(
0a(
0m(
0y(
0')
03)
0?)
18
0D
0P
17
1O
1g
1s
1!"
1-"
19"
1E"
1Q"
1]"
1i"
1u"
1##
1/#
1;#
1G#
1S#
1_#
1k#
1w#
1%$
11$
1=$
1I$
1U$
1a$
1m$
1y$
1'%
13%
1?%
1K%
1W%
1c%
1o%
1{%
1)&
15&
1A&
1M&
1Y&
1e&
1q&
1}&
1+'
17'
1C'
1O'
1['
1g'
1s'
1!(
1-(
19(
1E(
1Q(
1](
1i(
1u(
1#)
1/)
1;)
1L)
1E)
15
16
0A
0B
b1 )
0M
0N
14
1L
1d
1p
1|
1*"
16"
1B"
1N"
1Z"
1f"
1r"
1~"
1,#
18#
1D#
1P#
1\#
1h#
1t#
1"$
1.$
1:$
1F$
1R$
1^$
1j$
1v$
1$%
10%
1<%
1H%
1T%
1`%
1l%
1x%
1&&
12&
1>&
1J&
1V&
1b&
1n&
1z&
1('
14'
1@'
1L'
1X'
1d'
1p'
1|'
1*(
16(
1B(
1N(
1Z(
1f(
1r(
1~(
1,)
b1111111111111111111111111111111111111111111111111111111111111111 *
18)
b10000000000000000000000000000000000000000000000000000000000000001 C)
b1 +
b1 A)
1;
19
13
0?
0K
12
1J
1b
1n
1z
1("
14"
1@"
1L"
1X"
1d"
1p"
1|"
1*#
16#
1B#
1N#
1Z#
1f#
1r#
1~#
1,$
18$
1D$
1P$
1\$
1h$
1t$
1"%
1.%
1:%
1F%
1R%
1^%
1j%
1v%
1$&
10&
1<&
1H&
1T&
1`&
1l&
1x&
1&'
12'
1>'
1J'
1V'
1b'
1n'
1z'
1((
14(
1@(
1L(
1X(
1d(
1p(
1|(
1*)
16)
10
1#
b1 "
b1111111111111111111111111111111111111111111111111111111111111111 !
#20
1.
1Q-
0O)
0U)
0[)
0a)
0g)
0m)
0s)
0y)
0!*
0'*
0-*
03*
09*
0?*
0E*
0K*
0Q*
0W*
0]*
0c*
0i*
0o*
0u*
0{*
0#+
0)+
0/+
05+
0;+
0A+
0G+
0M+
0S+
0Y+
0_+
0e+
0k+
0q+
0w+
0}+
0%,
0+,
01,
07,
0=,
0C,
0I,
0O,
0U,
0[,
0a,
0g,
0m,
0s,
0y,
0!-
0'-
0--
03-
09-
0?-
0E-
0K-
b1 -
b10000000000000000000000000000000000000000000000000000000000000001 ,
b10000000000000000000000000000000000000000000000000000000000000001 B)
1I)
0<
1M-
1I-
0:
1H
1T
1`
0l
1x
1&"
12"
1>"
1J"
1V"
1b"
1n"
1z"
1(#
14#
1@#
1L#
1X#
1d#
1p#
1|#
1*$
16$
1B$
1N$
1Z$
1f$
1r$
1~$
1,%
18%
1D%
1P%
1\%
1h%
1t%
1"&
1.&
1:&
1F&
1R&
1^&
1j&
1v&
1$'
10'
1<'
1H'
1T'
1`'
1l'
1x'
1&(
12(
1>(
1J(
1V(
1b(
1n(
1z(
1()
14)
1@)
0R)
0K)
0G)
1F
0X)
0Q)
0M)
1R
0^)
0W)
0S)
1^
0d)
0])
0Y)
0j
0j)
0c)
0_)
1v
0p)
0i)
0e)
1$"
0v)
0o)
0k)
10"
0|)
0u)
0q)
1<"
0$*
0{)
0w)
1H"
0**
0#*
0})
1T"
00*
0)*
0%*
1`"
06*
0/*
0+*
1l"
0<*
05*
01*
1x"
0B*
0;*
07*
1&#
0H*
0A*
0=*
12#
0N*
0G*
0C*
1>#
0T*
0M*
0I*
1J#
0Z*
0S*
0O*
1V#
0`*
0Y*
0U*
1b#
0f*
0_*
0[*
1n#
0l*
0e*
0a*
1z#
0r*
0k*
0g*
1($
0x*
0q*
0m*
14$
0~*
0w*
0s*
1@$
0&+
0}*
0y*
1L$
0,+
0%+
0!+
1X$
02+
0++
0'+
1d$
08+
01+
0-+
1p$
0>+
07+
03+
1|$
0D+
0=+
09+
1*%
0J+
0C+
0?+
16%
0P+
0I+
0E+
1B%
0V+
0O+
0K+
1N%
0\+
0U+
0Q+
1Z%
0b+
0[+
0W+
1f%
0h+
0a+
0]+
1r%
0n+
0g+
0c+
1~%
0t+
0m+
0i+
1,&
0z+
0s+
0o+
18&
0",
0y+
0u+
1D&
0(,
0!,
0{+
1P&
0.,
0',
0#,
1\&
04,
0-,
0),
1h&
0:,
03,
0/,
1t&
0@,
09,
05,
1"'
0F,
0?,
0;,
1.'
0L,
0E,
0A,
1:'
0R,
0K,
0G,
1F'
0X,
0Q,
0M,
1R'
0^,
0W,
0S,
1^'
0d,
0],
0Y,
1j'
0j,
0c,
0_,
1v'
0p,
0i,
0e,
1$(
0v,
0o,
0k,
10(
0|,
0u,
0q,
1<(
0$-
0{,
0w,
1H(
0*-
0#-
0},
1T(
00-
0)-
0%-
1`(
06-
0/-
0+-
1l(
0<-
05-
01-
1x(
0B-
0;-
07-
1&)
0H-
0A-
0=-
12)
0N-
0G-
0C-
b1111111111111111111111111111111111111111111111111111111111101110 /
1>)
1C
1O
1[
0g
1s
1!"
1-"
19"
1E"
1Q"
1]"
1i"
1u"
1##
1/#
1;#
1G#
1S#
1_#
1k#
1w#
1%$
11$
1=$
1I$
1U$
1a$
1m$
1y$
1'%
13%
1?%
1K%
1W%
1c%
1o%
1{%
1)&
15&
1A&
1M&
1Y&
1e&
1q&
1}&
1+'
17'
1C'
1O'
1['
1g'
1s'
1!(
1-(
19(
1E(
1Q(
1](
1i(
1u(
1#)
1/)
1;)
0G
0S
0_
0k
0w
0%"
01"
0="
0I"
0U"
0a"
0m"
0y"
0'#
03#
0?#
0K#
0W#
0c#
0o#
0{#
0)$
05$
0A$
0M$
0Y$
0e$
0q$
0}$
0+%
07%
0C%
0O%
0[%
0g%
0s%
0!&
0-&
09&
0E&
0Q&
0]&
0i&
0u&
0#'
0/'
0;'
0G'
0S'
0_'
0k'
0w'
0%(
01(
0=(
0I(
0U(
0a(
0m(
0y(
0')
03)
0?)
1D
1P
1\
0h
1t
1""
1."
1:"
1F"
1R"
1^"
1j"
1v"
1$#
10#
1<#
1H#
1T#
1`#
1l#
1x#
1&$
12$
1>$
1J$
1V$
1b$
1n$
1z$
1(%
14%
1@%
1L%
1X%
1d%
1p%
1|%
1*&
16&
1B&
1N&
1Z&
1f&
1r&
1~&
1,'
18'
1D'
1P'
1\'
1h'
1t'
1"(
1.(
1:(
1F(
1R(
1^(
1j(
1v(
1$)
10)
1<)
08
1L)
1E)
1@
1L
1X
0d
1p
1|
1*"
16"
1B"
1N"
1Z"
1f"
1r"
1~"
1,#
18#
1D#
1P#
1\#
1h#
1t#
1"$
1.$
1:$
1F$
1R$
1^$
1j$
1v$
1$%
10%
1<%
1H%
1T%
1`%
1l%
1x%
1&&
12&
1>&
1J&
1V&
1b&
1n&
1z&
1('
14'
1@'
1L'
1X'
1d'
1p'
1|'
1*(
16(
1B(
1N(
1Z(
1f(
1r(
1~(
1,)
b1111111111111111111111111111111111111111111111111111111111101111 *
18)
0E
0Q
0]
0i
0u
0#"
0/"
0;"
0G"
0S"
0_"
0k"
0w"
0%#
01#
0=#
0I#
0U#
0a#
0m#
0y#
0'$
03$
0?$
0K$
0W$
0c$
0o$
0{$
0)%
05%
0A%
0M%
0Y%
0e%
0q%
0}%
0+&
07&
0C&
0O&
0[&
0g&
0s&
0!'
0-'
09'
0E'
0Q'
0]'
0i'
0u'
0#(
0/(
0;(
0G(
0S(
0_(
0k(
0w(
0%)
01)
0=)
1A
1B
1M
1N
1Y
1Z
0e
0f
1q
1r
1}
1~
1+"
1,"
17"
18"
1C"
1D"
1O"
1P"
1["
1\"
1g"
1h"
1s"
1t"
1!#
1"#
1-#
1.#
19#
1:#
1E#
1F#
1Q#
1R#
1]#
1^#
1i#
1j#
1u#
1v#
1#$
1$$
1/$
10$
1;$
1<$
1G$
1H$
1S$
1T$
1_$
1`$
1k$
1l$
1w$
1x$
1%%
1&%
11%
12%
1=%
1>%
1I%
1J%
1U%
1V%
1a%
1b%
1m%
1n%
1y%
1z%
1'&
1(&
13&
14&
1?&
1@&
1K&
1L&
1W&
1X&
1c&
1d&
1o&
1p&
1{&
1|&
1)'
1*'
15'
16'
1A'
1B'
1M'
1N'
1Y'
1Z'
1e'
1f'
1q'
1r'
1}'
1~'
1+(
1,(
17(
18(
1C(
1D(
1O(
1P(
1[(
1\(
1g(
1h(
1s(
1t(
1!)
1")
1-)
1.)
19)
1:)
b1111111111111111111111111111111111111111111111111111111111101110 )
05
06
b10000000000000000000000000000000000000000000000000000000000000001 C)
b1 +
b1 A)
1;
09
1c
0>
0J
0V
0b
0n
0z
0("
04"
0@"
0L"
0X"
0d"
0p"
0|"
0*#
06#
0B#
0N#
0Z#
0f#
0r#
0~#
0,$
08$
0D$
0P$
0\$
0h$
0t$
0"%
0.%
0:%
0F%
0R%
0^%
0j%
0v%
0$&
00&
0<&
0H&
0T&
0`&
0l&
0x&
0&'
02'
0>'
0J'
0V'
0b'
0n'
0z'
0((
04(
0@(
0L(
0X(
0d(
0p(
0|(
0*)
06)
1&
1%
0$
00
0#
b10001 "
b1 !
#30
0O)
0U)
0a)
0g)
0m)
0s)
0y)
0!*
0'*
0-*
03*
09*
0?*
0E*
0K*
0Q*
0W*
0]*
0c*
0i*
0o*
0u*
0{*
0#+
0)+
0/+
05+
0;+
0A+
0G+
0M+
0S+
0Y+
0_+
0e+
0k+
0q+
0w+
0}+
0%,
0+,
01,
07,
0=,
0C,
0I,
0O,
0U,
0[,
0a,
0g,
0m,
0s,
0y,
0!-
0'-
0--
03-
09-
0?-
0E-
0M-
0I-
0H
0T
0`
0x
0&"
02"
0>"
0J"
0V"
0b"
0n"
0z"
0(#
04#
0@#
0L#
0X#
0d#
0p#
0|#
0*$
06$
0B$
0N$
0Z$
0f$
0r$
0~$
0,%
08%
0D%
0P%
0\%
0h%
0t%
0"&
0.&
0:&
0F&
0R&
0^&
0j&
0v&
0$'
00'
0<'
0H'
0T'
0`'
0l'
0x'
0&(
02(
0>(
0J(
0V(
0b(
0n(
0z(
0()
04)
0@)
0.
0R)
0K)
0G)
0F
0X)
0Q)
0M)
0R
0^)
0W)
0S)
0^
0j)
0c)
0_)
0v
0p)
0i)
0e)
0$"
0v)
0o)
0k)
00"
0|)
0u)
0q)
0<"
0$*
0{)
0w)
0H"
0**
0#*
0})
0T"
00*
0)*
0%*
0`"
06*
0/*
0+*
0l"
0<*
05*
01*
0x"
0B*
0;*
07*
0&#
0H*
0A*
0=*
02#
0N*
0G*
0C*
0>#
0T*
0M*
0I*
0J#
0Z*
0S*
0O*
0V#
0`*
0Y*
0U*
0b#
0f*
0_*
0[*
0n#
0l*
0e*
0a*
0z#
0r*
0k*
0g*
0($
0x*
0q*
0m*
04$
0~*
0w*
0s*
0@$
0&+
0}*
0y*
0L$
0,+
0%+
0!+
0X$
02+
0++
0'+
0d$
08+
01+
0-+
0p$
0>+
07+
03+
0|$
0D+
0=+
09+
0*%
0J+
0C+
0?+
06%
0P+
0I+
0E+
0B%
0V+
0O+
0K+
0N%
0\+
0U+
0Q+
0Z%
0b+
0[+
0W+
0f%
0h+
0a+
0]+
0r%
0n+
0g+
0c+
0~%
0t+
0m+
0i+
0,&
0z+
0s+
0o+
08&
0",
0y+
0u+
0D&
0(,
0!,
0{+
0P&
0.,
0',
0#,
0\&
04,
0-,
0),
0h&
0:,
03,
0/,
0t&
0@,
09,
05,
0"'
0F,
0?,
0;,
0.'
0L,
0E,
0A,
0:'
0R,
0K,
0G,
0F'
0X,
0Q,
0M,
0R'
0^,
0W,
0S,
0^'
0d,
0],
0Y,
0j'
0j,
0c,
0_,
0v'
0p,
0i,
0e,
0$(
0v,
0o,
0k,
00(
0|,
0u,
0q,
0<(
0$-
0{,
0w,
0H(
0*-
0#-
0},
0T(
00-
0)-
0%-
0`(
06-
0/-
0+-
0l(
0<-
05-
01-
0x(
0B-
0;-
07-
0&)
0H-
0A-
0=-
02)
0N-
0G-
0C-
b0 /
0>)
0I)
0Q-
0G
0S
0_
0w
0%"
01"
0="
0I"
0U"
0a"
0m"
0y"
0'#
03#
0?#
0K#
0W#
0c#
0o#
0{#
0)$
05$
0A$
0M$
0Y$
0e$
0q$
0}$
0+%
07%
0C%
0O%
0[%
0g%
0s%
0!&
0-&
09&
0E&
0Q&
0]&
0i&
0u&
0#'
0/'
0;'
0G'
0S'
0_'
0k'
0w'
0%(
01(
0=(
0I(
0U(
0a(
0m(
0y(
0')
03)
b1 C)
b1 +
b1 A)
0?)
b0 -
0C
0O
0[
0s
0!"
0-"
09"
0E"
0Q"
0]"
0i"
0u"
0##
0/#
0;#
0G#
0S#
0_#
0k#
0w#
0%$
01$
0=$
0I$
0U$
0a$
0m$
0y$
0'%
03%
0?%
0K%
0W%
0c%
0o%
0{%
0)&
05&
0A&
0M&
0Y&
0e&
0q&
0}&
0+'
07'
0C'
0O'
0['
0g'
0s'
0!(
0-(
09(
0E(
0Q(
0](
0i(
0u(
0#)
0/)
0;)
b0 ,
b0 B)
0K-
0@
0D
0L
0P
0X
0\
0p
0t
0|
0""
0*"
0."
06"
0:"
0B"
0F"
0N"
0R"
0Z"
0^"
0f"
0j"
0r"
0v"
0~"
0$#
0,#
00#
08#
0<#
0D#
0H#
0P#
0T#
0\#
0`#
0h#
0l#
0t#
0x#
0"$
0&$
0.$
02$
0:$
0>$
0F$
0J$
0R$
0V$
0^$
0b$
0j$
0n$
0v$
0z$
0$%
0(%
00%
04%
0<%
0@%
0H%
0L%
0T%
0X%
0`%
0d%
0l%
0p%
0x%
0|%
0&&
0*&
02&
06&
0>&
0B&
0J&
0N&
0V&
0Z&
0b&
0f&
0n&
0r&
0z&
0~&
0('
0,'
04'
08'
0@'
0D'
0L'
0P'
0X'
0\'
0d'
0h'
0p'
0t'
0|'
0"(
0*(
0.(
06(
0:(
0B(
0F(
0N(
0R(
0Z(
0^(
0f(
0j(
0r(
0v(
0~(
0$)
0,)
00)
b1 *
08)
0<)
0A
0B
0M
0N
0Y
0Z
0q
0r
0}
0~
0+"
0,"
07"
08"
0C"
0D"
0O"
0P"
0["
0\"
0g"
0h"
0s"
0t"
0!#
0"#
0-#
0.#
09#
0:#
0E#
0F#
0Q#
0R#
0]#
0^#
0i#
0j#
0u#
0v#
0#$
0$$
0/$
00$
0;$
0<$
0G$
0H$
0S$
0T$
0_$
0`$
0k$
0l$
0w$
0x$
0%%
0&%
01%
02%
0=%
0>%
0I%
0J%
0U%
0V%
0a%
0b%
0m%
0n%
0y%
0z%
0'&
0(&
03&
04&
0?&
0@&
0K&
0L&
0W&
0X&
0c&
0d&
0o&
0p&
0{&
0|&
0)'
0*'
05'
06'
0A'
0B'
0M'
0N'
0Y'
0Z'
0e'
0f'
0q'
0r'
0}'
0~'
0+(
0,(
07(
08(
0C(
0D(
0O(
0P(
0[(
0\(
0g(
0h(
0s(
0t(
0!)
0")
0-)
0.)
b0 )
09)
0:)
03
0c
1(
0%
b0 "
#40
b10 -
b10 ,
b10 B)
1O)
0(
1'
0&
#50
b0 -
b0 ,
b0 B)
0O)
1(
0'
1$
#60
b100000000000000000000000000000000000000000000000000000000000000 -
b100000000000000000000000000000000000000000000000000000000000000 ,
b100000000000000000000000000000000000000000000000000000000000000 B)
1E-
1N-
1G-
1C-
b1000000000000000000000000000000000000000000000000000000000000001 C)
b1000000000000000000000000000000000000000000000000000000000000001 +
b1000000000000000000000000000000000000000000000000000000000000001 A)
1?)
1;)
b1000000000000000000000000000000000000000000000000000000000000001 *
18)
16)
b1000000000000000000000000000000000000000000000000000000000000001 !
#70
